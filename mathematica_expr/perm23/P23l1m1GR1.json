"((I\/105)*D1^4*Sqrt[(2*Pi)\/3]*Pk2*Pk3*st*(-6*(5*beta18 - 12*beta19*(-1 + C))*ct^5*f^2*k1^2*k2^4 - 3*ct^4*f^2*k1*k2^3*(12*beta15*k1^2 + 25*beta18*k1^2 + 15*(beta14 - beta16)*(k2^2 - k3^2) - 12*beta19*(3*(-1 + C)*k1^2 + (-3 + 4*C)*k2^2 + k3^2)) - 2*ct^3*f*k2^2*(18*beta19*f*k1^4 - 18*beta19*C*f*k1^4 + 21*b1*gr1*k1^4 + 18*f*gr1*k1^4 - 18*C*f*gr1*k1^4 - 10*f^2*gr1*k1^4 + 42*g2*gr1*k1^4 - 21*b1*gr1*K*k1^4 + 42*b1*beta19*k1^2*k2^2 - 42*b1*beta19*C*k1^2*k2^2 + 36*beta14*f*k1^2*k2^2 - 54*beta16*f*k1^2*k2^2 + 81*beta19*f*k1^2*k2^2 - 108*beta19*C*f*k1^2*k2^2 + 18*beta19*f*k2^4 - 36*beta19*C*f*k2^4 + 9*beta15*f*k1^2*(3*k1^2 + 2*k2^2) + 42*b1*beta19*k1^2*k3^2 - 42*b1*beta19*C*k1^2*k3^2 - 54*beta14*f*k1^2*k3^2 + 36*beta16*f*k1^2*k3^2 - 27*beta19*f*k1^2*k3^2 - 18*beta19*f*k2^2*k3^2 + 36*beta19*C*f*k2^2*k3^2 + 36*beta19*f*k1^2*k2^2*st^2 - 36*beta19*C*f*k1^2*k2^2*st^2 + 6*beta18*k1^2*(3*b1*(k2^2 + k3^2) + 5*f*(k1^2 + k2^2*st^2))) + beta17*k1^2*(225*ct^4*f^2*k1*k2^3 + 90*ct^5*f^2*k2^4 + 4*ct^3*f*k2^2*(27*b1*(k2^2 + k3^2) + 5*f*(10*k1^2 + 9*k2^2*st^2)) + 3*ct^2*f*k1*k2*(27*b1*(3*k2^2 + k3^2) + 5*f*(5*k1^2 + 18*k2^2*st^2)) + 3*k1*k2*(21*b1^2*k3^2 + 5*f^2*st^2*(k1^2 + 3*k2^2*st^2) + 3*b1*f*(5*k1^2 + 3*(3*k2^2 + k3^2)*st^2)) + 2*ct*(63*b1^2*k2^2*k3^2 + 9*b1*f*(k1^2*(10*k2^2 + k3^2) + 6*k2^2*(k2^2 + k3^2)*st^2) + 5*f^2*(k1^4 + 12*k1^2*k2^2*st^2 + 9*k2^4*st^4))) - 3*ct^2*k1*k2*(7*b1*f*gr1*k1^4 + 6*f^2*gr1*k1^4 - 6*C*f^2*gr1*k1^4 - 10*f^3*gr1*k1^4 + 14*f*g2*gr1*k1^4 - 7*b1*f*gr1*K*k1^4 + 28*b1*beta19*f*k1^2*k2^2 - 28*b1*beta19*C*f*k1^2*k2^2 + 9*beta14*f^2*k1^2*k2^2 - 27*beta16*f^2*k1^2*k2^2 + 18*beta19*f^2*k1^2*k2^2 - 24*beta19*C*f^2*k1^2*k2^2 - 35*b1^2*gr1*k1^2*k2^2 + 14*b1*C*f*gr1*k1^2*k2^2 + 18*f^2*gr1*k1^2*k2^2 + 18*b1*f^2*gr1*k1^2*k2^2 - 24*C*f^2*gr1*k1^2*k2^2 - 70*b1*g2*gr1*k1^2*k2^2 + 56*f*g2*gr1*k1^2*k2^2 + 35*b1^2*gr1*K*k1^2*k2^2 - 28*b1*f*gr1*K*k1^2*k2^2 + 21*b1*beta14*f*k2^4 - 21*b1*beta16*f*k2^4 + 42*b1*beta19*f*k2^4 - 56*b1*beta19*C*f*k2^4 + 18*beta19*f^2*k2^4 - 36*beta19*C*f^2*k2^4 - 27*beta14*f^2*k1^2*k3^2 + 9*beta16*f^2*k1^2*k3^2 - 6*beta19*f^2*k1^2*k3^2 + 35*b1^2*gr1*k1^2*k3^2 - 14*b1*C*f*gr1*k1^2*k3^2 - 6*f^2*gr1*k1^2*k3^2 - 18*b1*f^2*gr1*k1^2*k3^2 + 70*b1*g2*gr1*k1^2*k3^2 - 35*b1^2*gr1*K*k1^2*k3^2 + 28*b1*beta19*f*k2^2*k3^2 - 56*b1*beta19*C*f*k2^2*k3^2 - 18*beta19*f^2*k2^2*k3^2 + 36*beta19*C*f^2*k2^2*k3^2 - 21*b1*beta14*f*k3^4 + 21*b1*beta16*f*k3^4 - 14*b1*beta19*f*k3^4 + 12*beta19*f^2*k1^2*k2^2*st^2 - 12*beta19*C*f^2*k1^2*k2^2*st^2 + 30*beta14*f^2*k2^4*st^2 - 30*beta16*f^2*k2^4*st^2 + 36*beta19*f^2*k2^4*st^2 - 48*beta19*C*f^2*k2^4*st^2 - 30*beta14*f^2*k2^2*k3^2*st^2 + 30*beta16*f^2*k2^2*k3^2*st^2 - 12*beta19*f^2*k2^2*k3^2*st^2 + beta18*f*k1^2*(9*b1*(3*k2^2 + k3^2) + 5*f*(k1^2 + 6*k2^2*st^2)) + 2*beta15*f*k1^2*(7*b1*(k2^2 + k3^2) + 3*f*(k1^2 + k2^2*(3 + 2*st^2)))) + ct*(-21*b1*k1^2*(2*b1*beta18*k2^2*k3^2 + 20*g2*gr1*k2^2*(-k2^2 + k3^2) + 5*b1*gr1*(k2^2 - k3^2)*((-1 + 2*K)*k2^2 + k3^2)) + 2*f^3*gr1*k1^4*(5*k1^2 + 6*k2^2*st^2) - 3*f^2*(9*gr1*k1^4*k2^2 + 24*b1*gr1*k1^4*k2^2 - 12*C*gr1*k1^4*k2^2 + 6*beta19*k1^2*k2^4 - 12*beta19*C*k1^2*k2^4 + 6*gr1*k1^2*k2^4 - 12*C*gr1*k1^2*k2^4 - 6*beta14*k1^4*k3^2 - 3*gr1*k1^4*k3^2 - 12*b1*gr1*k1^4*k3^2 - 6*beta19*k1^2*k2^2*k3^2 + 12*beta19*C*k1^2*k2^2*k3^2 - 6*gr1*k1^2*k2^2*k3^2 + 12*C*gr1*k1^2*k2^2*k3^2 + 12*beta18*k1^4*k2^2*st^2 + 24*beta14*k1^2*k2^4*st^2 + 18*beta19*k1^2*k2^4*st^2 - 24*beta19*C*k1^2*k2^4*st^2 + 12*beta19*k2^6*st^2 - 24*beta19*C*k2^6*st^2 - 36*beta14*k1^2*k2^2*k3^2*st^2 - 6*beta19*k1^2*k2^2*k3^2*st^2 - 12*beta19*k2^4*k3^2*st^2 + 24*beta19*C*k2^4*k3^2*st^2 + 10*beta18*k1^2*k2^4*st^4 - 6*beta16*k1^2*k2^2*(k1^2 + 6*k2^2*st^2 - 4*k3^2*st^2) + 6*beta15*(2*k1^2*k2^4*st^2 + k1^4*k2^2*(1 + st^2))) + 3*f*(14*b1^2*gr1*k1^2*(k2^2 - k3^2)^2 - 14*gr1*k1^2*k2^2*(b2*k3^2 + 2*g2*(k1^2 + k2^2 - k3^2)) - b1*(14*beta15*k1^2*k2^2*(k1^2 + k2^2 + k3^2) - 7*(-(gr1*k1^2*(k2^2 - k3^2)*((-3 + 4*C - 2*K)*k2^2 + k3^2)) + gr1*k1^4*((-1 + 2*K)*k2^2 + k3^2) + 2*beta14*k1^2*(-2*k2^4 + 3*k2^2*k3^2 + k3^4) + 2*k2^2*(beta16*k1^2*(3*k2^2 - k3^2) + beta19*k1^2*((-3 + 4*C)*k2^2 + k3^2) + beta19*(-1 + 2*C)*(k2^4 - k3^4))) + 6*beta18*k1^2*k2^2*(3*k1^2 + 2*(k2^2 + k3^2)*st^2)))) - 3*k1*k2*(7*b1^2*(5*gr1*K*(k2^2 - k3^2)^2 + 2*f*gr1*k1^2*(-k2^2 + k3^2) + k3^2*(beta18*k1^2 + 5*(beta14 - beta16)*(k2^2 - k3^2))) + b1*(-35*gr1*(k2^2 - k3^2)*(b2*k3^2 + 2*g2*(k2^2 - k3^2)) + 6*f^2*gr1*k1^2*(k1^2 + (k2^2 - k3^2)*st^2) + 3*beta18*f*k1^2*(k1^2 + (3*k2^2 + k3^2)*st^2) + 7*f*(2*beta15*k1^2*k2^2 - 3*beta16*k1^2*k2^2 - gr1*K*k1^2*k2^2 + 2*beta19*k2^4 - 4*beta19*C*k2^4 - gr1*k2^4 + 2*C*gr1*k2^4 + beta16*k1^2*k3^2 + gr1*K*k1^2*k3^2 - 2*beta19*k2^2*k3^2 + 4*beta19*C*k2^2*k3^2 + 2*gr1*k2^2*k3^2 - 4*C*gr1*k2^2*k3^2 - gr1*k3^4 + 2*C*gr1*k3^4 + beta14*k1^2*(k2^2 - 3*k3^2) - 3*beta16*k2^4*st^2 + 3*beta16*k3^4*st^2 + 3*beta14*(k2^4 - k3^4)*st^2)) + f*(7*gr1*k1^2*(b2*k3^2 + 2*g2*(k2^2 - k3^2)) - 2*f^2*gr1*k1^4*st^2 + f*(-3*(-1 + 2*C)*gr1*k1^2*(k2^2 - k3^2) + st^2*(beta18*(k1^4 + 5*k1^2*k2^2*st^2) + 3*(2*beta15*k1^2*k2^2 - 3*beta16*k1^2*k2^2 + 2*beta19*k2^4 - 4*beta19*C*k2^4 + beta16*k1^2*k3^2 - 2*beta19*k2^2*k3^2 + 4*beta19*C*k2^2*k3^2 + beta14*k1^2*(k2^2 - 3*k3^2) - 5*beta16*k2^4*st^2 + 5*beta16*k2^2*k3^2*st^2 + 5*beta14*k2^2*(k2^2 - k3^2)*st^2)))))))\/(k1*k2^2*k3^4)"