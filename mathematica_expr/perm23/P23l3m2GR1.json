"((-1\/33*I)*D1^4*Sqrt[(2*Pi)\/105]*Pk2*Pk3*st^2*(-33*b1^2*beta18*k1^2*k2^2*k3^2 + f^3*gr1*k1^4*(5*k1^2 + 30*ct*k1*k2 + 6*k2^2*(5*ct^2 + st^2)) + beta17*k1^2*(99*b1^2*k2^2*k3^2 + 11*b1*f*(9*ct*k1*k2*(3*k2^2 + k3^2) + k1^2*(10*k2^2 + k3^2) + 6*k2^2*(k2^2 + k3^2)*(3*ct^2 + st^2)) + 5*f^2*(k1^4 + 15*ct*k1^3*k2 + 12*k1^2*k2^2*(5*ct^2 + st^2) + 18*ct*k1*k2^3*(5*ct^2 + 3*st^2) + 9*k2^4*(5*ct^4 + 6*ct^2*st^2 + st^4))) + 11*f*(3*b1^2*gr1*k1^2*(k2^2 - k3^2)^2 - 3*gr1*k1^2*k2^2*(2*ct^2*g2*k1^2 + 4*ct*g2*k1*k2 + b2*k3^2 + 2*g2*(k2^2 - k3^2)) - b1*(3*(beta14*k1^2*(2*k2^4 - 3*k2^2*k3^2 - k3^4) + ct^2*k1^2*k2^2*(-(gr1*(-1 + K)*k1^2) - 2*beta19*(-1 + C)*(k2^2 + k3^2)) + ct*k1*k2*(gr1*k1^2*(k2^2 - 2*K*k2^2 - k3^2) + beta15*k1^2*(k2^2 + k3^2) + (k2^2 + k3^2)*(3*beta14*k2^2 - 3*beta16*k2^2 + 3*beta19*k2^2 - 4*beta19*C*k2^2 - 3*beta14*k3^2 + 3*beta16*k3^2 - beta19*k3^2)) + k2^2*(beta16*k1^2*(-3*k2^2 + k3^2) + beta15*k1^2*(k2^2 + k3^2) - (k2^2 - k3^2)*(gr1*K*k1^2 + beta19*(-1 + 2*C)*(k2^2 + k3^2)))) + beta18*k1^2*k2*(3*k1^2*k2 + 3*ct*k1*(3*k2^2 + k3^2) + 2*k2*(k2^2 + k3^2)*(3*ct^2 + st^2)))) - f^2*(11*beta15*k1^2*k2*(ct*k1 + k2)*(k1^2 + 6*ct*k1*k2 + 2*k2^2*(3*ct^2 + st^2)) + 3*beta18*k1^2*k2*(50*ct^3*k1*k2^2 + 25*ct^4*k2^3 + 6*k1^2*k2*st^2 + 5*k2^3*st^4 + 30*ct^2*k2*(k1^2 + k2^2*st^2) + 5*ct*(k1^3 + 6*k1*k2^2*st^2)) - 11*(beta19*k2*(2*(-1 + C)*ct^2*k1^2*k2 + (-1 + 2*C)*k2*(k2^2 - k3^2) + ct*k1*((-3 + 4*C)*k2^2 + k3^2))*(k1^2 + 6*ct*k1*k2 + 2*k2^2*(3*ct^2 + st^2)) + beta16*k1*k2*(k1^3*k2 + ct*k1^2*(9*k2^2 - 3*k3^2) + 10*ct*k2^2*(k2^2 - k3^2)*(ct^2 + st^2) + 2*k1*k2*(3*k2^2 - 2*k3^2)*(3*ct^2 + st^2)) + k1*(-10*beta14*ct^3*k2^3*(k2^2 - k3^2) + 2*ct^2*k1*k2^2*((-1 + C)*gr1*k1^2 - 6*beta14*k2^2 + 9*beta14*k3^2) + 2*b1*gr1*k1^2*(k1*(-2*k2^2 + k3^2) + 3*ct*k2*(-k2^2 + k3^2)) + k1*(beta14*k1^2*k3^2 + (-1 + 2*C)*gr1*k2^2*(k2^2 - k3^2) + 2*beta14*k2^2*(-2*k2^2 + 3*k3^2)*st^2) + ct*(gr1*k1^2*k2*((-3 + 4*C)*k2^2 + k3^2) + beta14*(-3*k1^2*(k2^3 - 3*k2*k3^2) + 10*k2^3*(-k2^2 + k3^2)*st^2)))))))\/(k1*k2^2*k3^4)"