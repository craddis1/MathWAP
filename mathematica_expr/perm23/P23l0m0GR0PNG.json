"(2*D1^4*Sqrt[Pi]*Pk2*Pk3*(21*bE01*k2*(10*bE01*(3*bE02 + alphak1*(3*b1 + f)*fNL)*k3^4 + alphak3^2*(5*bE11*k3^2*(3*b1*k3^2 + f*(k1^2 + 2*ct*k1*k2 + k2^2*(ct^2 + st^2))) + bE01*(15*b1*k2*(ct*k1 + k2)*k3^2 + 3*f^2*k1*(k1 + ct*k2)*(k1^2 + 2*ct*k1*k2 + k2^2*(ct^2 + st^2)) + 5*f*(k1^2*k2^2 + ct^3*k1*k2^3 + ct^2*(2*k1^2*k2^2 + k2^4) + b1*k1^2*k3^2 + k2^4*st^2 + ct*k1*k2*(k1^2 + b1*k3^2 + k2^2*(2 + st^2))))) + alphak3*k3^2*(5*bE01^2*(3*k2*(ct*k1 + k2) + f*k1*(k1 + ct*k2)) + 15*bE01*bE11*k3^2 + 2*(5*bE02*(3*b1*k3^2 + f*(k1^2 + 2*ct*k1*k2 + k2^2*(ct^2 + st^2))) + alphak1*fNL*(15*b1^2*k3^2 + 5*b1*f*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 + k3^2 + k2^2*st^2) + f^2*(3*k1^2 + 6*ct*k1*k2 + k2^2*(3*ct^2 + st^2)))))) + alphak2^2*(-21*bE01*k3^4*(5*b1*(bE01*ct*(-3 + f)*k1 - 3*bE01*k2 - 3*bE11*k2) + f*(bE01*ct*(-5 + 3*f)*k1 - 5*bE01*k2 - 5*bE11*k2)*(ct^2 + st^2)) - 3*alphak3*k3^2*(35*b1^2*(-3*bE11*k2*k3^2 + bE01*(3*ct^2*(-1 + K)*k1^2*k2 + ct*k1*(-((3 + f - 6*K)*k2^2) + 2*f*k3^2) + k2*(-(f*k1^2) + 3*K*k2^2 - 3*k3^2 - 3*K*k3^2))) + 7*b1*(-5*bE11*f*k2*(k1^2 + 2*ct*k1*k2 + (k2^2 + k3^2)*(ct^2 + st^2)) + bE01*(5*ct^4*f*(-1 + K)*k1^2*k2 + 2*ct^3*f*k1*(5*(-1 + K)*k2^2 + 3*f*k3^2) + ct*k1*(-60*g2*k2^2 + 6*f^2*(k1^2 + k3^2*st^2) - 5*f*(k1^2 - k3^2 + k2^2*(5 - 4*C - 2*(-1 + K)*st^2))) + ct^2*k2*(6*f^2*k1^2 - 30*g2*k1^2 + 5*f*((-1 + K)*k2^2 - (1 + K)*k3^2 + k1^2*(-4 + 2*C + (-1 + K)*st^2))) + k2*(-15*(b2*k3^2 + 2*g2*(k2^2 - k3^2)) + 2*f^2*k1^2*st^2 - 5*f*(k1^2 + k2^2*(1 - 2*C - (-1 + K)*st^2) + k3^2*(-1 + 2*C + (1 + K)*st^2))))) + f*(-7*bE11*f*k2*(6*ct^3*k1*k2 + 3*ct^4*k2^2 + 6*ct*k1*k2*st^2 + 3*ct^2*(k1^2 + 2*k2^2*st^2) + st^2*(k1^2 + 3*k2^2*st^2)) + bE01*(3*ct^5*f*(-7 + 5*f)*k1*k2^2 + ct^4*k2*(42*(-2 + C)*f*k1^2 + 45*f^2*k1^2 - 70*g2*k1^2 - 21*f*k2^2) + ct^3*k1*(-140*g2*k2^2 + 30*f^2*(k1^2 + k2^2*st^2) - 21*f*(k1^2 - k3^2 + k2^2*(5 - 4*C + 2*st^2))) + ct*k1*st^2*(-140*g2*k2^2 + 3*f^2*(6*k1^2 + 5*k2^2*st^2) - 7*f*(k1^2 - k3^2 + k2^2*(9 - 4*C + 3*st^2))) - k2*st^2*(35*(b2*k3^2 + 2*g2*(k2^2 - k3^2)) - 9*f^2*k1^2*st^2 + 7*f*(k1^2 + (-1 + 2*C)*k3^2 + k2^2*(1 - 2*C + 3*st^2))) + ct^2*k2*(54*f^2*k1^2*st^2 - 35*(b2*k3^2 + 2*g2*(k2^2 - k3^2 + k1^2*st^2)) + 7*f*(k1^2*(-3 + 2*(-4 + C)*st^2) + 3*((1 - 2*C)*k3^2 + k2^2*(-1 + 2*C - 2*st^2))))))) - alphak3^2*(105*b1^3*k3^2*(-(f*k1^2*k2) + 3*ct^2*(-1 + K)*k1^2*k2 - ct*(3 + f - 6*K)*k1*k2^2 + ct*(3 + f)*k1*k3^2 + 3*K*k2*(k2^2 - k3^2)) + 21*b1^2*(5*ct^4*f*(-1 + K)*k1^2*k2*(k2^2 + k3^2) + ct^3*f*k1*(10*(-1 + K)*k1^2*k2^2 + (-5 - 3*f + 10*K)*k2^4 + 10*K*k2^2*k3^2 + (5 + 3*f)*k3^4) + k2*(-15*(b2*k3^4 + 2*g2*k3^2*(k2^2 - k3^2)) + f^2*(-3*k1^4 + k1^2*(-3*k2^2 + 2*k3^2)*st^2) + 5*f*(k2^2 - k3^2)*((-1 + 2*C)*k3^2 + K*(k1^2 + (k2^2 + k3^2)*st^2))) + ct*k1*(-60*g2*k2^2*k3^2 + f^2*(k1^2*(-9*k2^2 + 6*k3^2) + 3*(-k2^4 + k3^4)*st^2) + 5*f*(-3*k2^2*k3^2 + 4*C*k2^2*k3^2 + k3^4 + k1^2*((-1 + 2*K)*k2^2 + k3^2) - k2^4*st^2 + k3^4*st^2 + 2*K*k2^2*(k3^2*(-1 + st^2) + k2^2*(1 + st^2)))) + ct^2*k2*(-30*g2*k1^2*k3^2 + 3*f^2*k1^2*(-3*k2^2 + 2*k3^2) + 5*f*((-1 + K)*k1^4 + K*(k2^4 - k3^4) + k1^2*(k3^2*(2*C + (-1 + K)*st^2) + k2^2*(-2 - st^2 + K*(4 + st^2)))))) + 3*b1*f*(21*ct^6*f*(-1 + K)*k1^2*k2^3 - 3*ct^5*f*k1*k2^2*(-14*(-1 + K)*k1^2 + (7 + 5*f - 14*K)*k2^2 - (7 + 5*f)*k3^2) + k2*(-35*(b2*k3^2 + 2*g2*(k2^2 - k3^2))*(k1^2 + (k2^2 + k3^2)*st^2) + f^2*(6*k1^4*st^2 + 3*k1^2*(-2*k2^2 + 3*k3^2)*st^4) + 7*f*(k2^2 - k3^2)*(k1^2*(-3 + 6*C + K*st^2) + st^2*((-1 + 2*C)*k3^2 + k2^2*(-1 + 2*C + 3*K*st^2)))) + ct*k1*(3*f^2*(5*k1^4 + 6*k1^2*k3^2*st^2 + 5*k2^2*(-k2^2 + k3^2)*st^4) - 70*k2^2*(b2*k3^2 + 2*g2*(k1^2 + k3^2*(-1 + st^2) + k2^2*(1 + st^2))) + 7*f*(k3^4*st^2 + k2^2*k3^2*(6 - 2*(1 + 3*K)*st^2 + 3*st^4 + 4*C*(-3 + st^2)) + k2^4*(-6 + (-3 + 6*K)*st^2 + (-3 + 6*K)*st^4 + 4*C*(3 + st^2)) + k1^2*(k3^2*(3 + st^2) + k2^2*(-9 + 12*C + (-1 + 2*K)*st^2)))) + ct^3*k1*(-140*g2*k2^2*(k1^2 + k2^2 + k3^2) + 30*f^2*(k1^2*k3^2 + k2^2*(-k2^2 + k3^2)*st^2) + 21*f*(k3^4 + 2*k2^2*k3^2*(-1 + 2*C - K + st^2) + k2^4*(-3 + 4*C - 2*st^2 + K*(2 + 4*st^2)) + k1^2*(k3^2 + k2^2*(-5 + 4*C - 2*st^2 + 2*K*(1 + st^2))))) + ct^4*k2*(-70*g2*k1^2*(k2^2 + k3^2) + 15*f^2*k1^2*(-2*k2^2 + 3*k3^2) + 21*f*((-1 + K)*k1^4 + K*k2^2*(k2^2 - k3^2) + 2*k1^2*(C*k3^2 + k2^2*(C + (-1 + K)*(2 + st^2))))) + ct^2*k2*(6*f^2*k1^2*(5*k1^2 + 3*(-2*k2^2 + 3*k3^2)*st^2) - 35*(b2*k3^2*(k2^2 + k3^2) + 2*g2*(k1^4 + k2^4 - k3^4 + k1^2*(k3^2*st^2 + k2^2*(4 + st^2)))) + 7*f*(k1^4*(-6 + 6*C + (-1 + K)*st^2) + 3*(k2^2 - k3^2)*((-1 + 2*C)*k3^2 + k2^2*(-1 + 2*C + 2*K*st^2)) + k1^2*(k3^2*(6 - 3*K + 2*(2 + C)*st^2) + k2^2*(-18 - 8*st^2 - 3*st^4 + 2*C*(12 + st^2) + 3*K*(1 + 4*st^2 + st^4)))))) + f^2*(ct^6*(90*(-1 + C)*f + 35*f^2 - 126*g2)*k1^2*k2^3 + 3*ct^5*k1*k2^2*(35*f^2*k1^2 - 84*g2*(k1^2 + k2^2) + 15*f*(4*(-1 + C)*k1^2 + (-3 + 4*C)*k2^2 + k3^2)) + k2*st^2*(9*(-1 + 2*C)*f*(k2^2 - k3^2)*(k1^2 + k2^2*st^2) - 21*(b2*k3^2 + 2*g2*(k2^2 - k3^2))*(k1^2 + 3*k2^2*st^2) + f^2*(9*k1^4*st^2 + 5*k1^2*k2^2*st^4)) + 3*ct*k1*st^2*(5*f^2*(k1^4 + 3*k1^2*k2^2*st^2) - 14*k2^2*(3*b2*k3^2 + 2*g2*(k1^2 - 3*k3^2 + 3*k2^2*(1 + st^2))) + 3*f*(k1^2*((-3 + 4*C)*k2^2 + k3^2) + k2^2*k3^2*(6 - 12*C + st^2) + k2^4*(-3*(2 + st^2) + 4*C*(3 + st^2)))) + 3*ct^4*k2*(5*f^2*(7*k1^4 + 5*k1^2*k2^2*st^2) - 21*(b2*k2^2*k3^2 + 2*g2*(k1^4 + k2^4 - k2^2*k3^2 + 2*k1^2*k2^2*(2 + st^2))) + 3*f*(10*(-1 + C)*k1^4 + 5*(-1 + 2*C)*k2^2*(k2^2 - k3^2) + 2*k1^2*(5*k3^2 + k2^2*(-15 + 20*C - 6*st^2 + 6*C*st^2)))) + ct^3*k1*(5*f^2*(7*k1^4 + 30*k1^2*k2^2*st^2) - 126*k2^2*(b2*k3^2 + 2*g2*(k2^2 - k3^2 + 2*k2^2*st^2 + k1^2*(1 + st^2))) + 9*f*(k1^2*(5*k3^2 + k2^2*(4*C*(5 + 3*st^2) - 3*(5 + 4*st^2))) + 2*k2^2*(k3^2*(5 - 10*C + 3*st^2) + k2^2*(-5 - 9*st^2 + 2*C*(5 + 6*st^2))))) + 3*ct^2*k2*(15*f^2*(2*k1^4*st^2 + k1^2*k2^2*st^4) - 7*(3*b2*k3^2*(k1^2 + 2*k2^2*st^2) + 2*g2*(k1^4*st^2 + 6*k2^2*(k2^2 - k3^2)*st^2 + 3*k1^2*(-k3^2 + k2^2*(1 + 4*st^2 + st^4)))) + 3*f*(2*(-1 + C)*k1^4*st^2 + 6*(-1 + 2*C)*k2^2*(k2^2 - k3^2)*st^2 + k1^2*(k3^2*(5 - 10*C + 6*st^2) + k2^2*(-5 - 18*st^2 - 2*st^4 + 2*C*(5 + 12*st^2 + st^4)))))))) + 3*alphak2*(7*bE01*k3^4*(-5*bE01^2*(ct*(-3 + f)*k1 - 3*k2) + 15*bE01*bE11*k2 + 2*k2*(15*alphak1*b1^2*fNL + 5*b1*(3*bE02 + alphak1*f*fNL*(1 + ct^2 + st^2)) + f*(5*bE02*(ct^2 + st^2) + alphak1*f*fNL*(3*ct^2 + st^2)))) + alphak3*k3^2*(35*bE01*bE11*k2*(6*b1*k3^2 + f*(k1^2 + 2*ct*k1*k2 + (k2^2 + k3^2)*(ct^2 + st^2))) + 7*bE01^2*(10*ct^3*f*k1*k2^2 + ct^2*k2*(-10*(-2 + C)*f*k1^2 - 6*f^2*k1^2 + 30*g2*k1^2 - 15*b1*(-1 + K)*k1^2 + 10*f*k2^2) + ct*k1*(-6*f^2*k1^2 + 30*(b1 + 2*g2 - b1*K)*k2^2 + 5*f*(k1^2 - (1 + 2*b1)*k3^2 + k2^2*(5 + 2*b1 - 4*C + 2*st^2))) + k2*(-15*(-2*g2*k2^2 + b1*(-1 + K)*k2^2 - b2*k3^2 + 2*g2*k3^2 - b1*(1 + K)*k3^2) - 2*f^2*k1^2*st^2 + 5*f*((1 + 2*b1)*k1^2 + (-1 + 2*C)*k3^2 + k2^2*(1 - 2*C + 2*st^2)))) + 2*k2*(105*alphak1*b1^3*fNL*k3^2 + 35*b1^2*(3*bE02*k3^2 + alphak1*f*fNL*(k1^2 + 2*ct*k1*k2 + k3^2 + ct^2*(k2^2 + k3^2) + k2^2*st^2 + k3^2*st^2)) + 7*b1*f*(5*bE02*(k1^2 + 2*ct*k1*k2 + (k2^2 + k3^2)*(ct^2 + st^2)) + alphak1*f*fNL*(3*ct^4*k2^2 + 6*ct*k1*k2*(1 + ct^2 + st^2) + k1^2*(3 + 3*ct^2 + st^2) + 3*ct^2*(k2^2 + k3^2 + 2*k2^2*st^2) + st^2*(k2^2 + k3^2 + 3*k2^2*st^2))) + f^2*(7*bE02*(6*ct^3*k1*k2 + 3*ct^4*k2^2 + 6*ct*k1*k2*st^2 + 3*ct^2*(k1^2 + 2*k2^2*st^2) + st^2*(k1^2 + 3*k2^2*st^2)) + 3*alphak1*f*fNL*(10*ct^3*k1*k2 + 5*ct^4*k2^2 + 6*ct*k1*k2*st^2 + st^2*(k1^2 + k2^2*st^2) + ct^2*(5*k1^2 + 6*k2^2*st^2))))) + alphak3^2*(7*bE11*k2*k3^2*(15*b1^2*k3^2 + 5*b1*f*(k1^2 + 2*ct*k1*k2 + (k2^2 + k3^2)*(ct^2 + st^2)) + f^2*(6*ct^3*k1*k2 + 3*ct^4*k2^2 + 6*ct*k1*k2*st^2 + 3*ct^2*(k1^2 + 2*k2^2*st^2) + st^2*(k1^2 + 3*k2^2*st^2))) + bE01*(3*ct^5*f^2*(7 + 5*f)*k1*k2^4 + ct^4*f*k2^3*(30*f^2*k1^2 + 70*g2*k1^2 - 35*b1*(-1 + K)*k1^2 + 21*f*(-2*(-2 + C)*k1^2 + k2^2)) + ct^3*f*k1*k2^2*(140*g2*(k1^2 + k2^2) - 14*b1*(5*(-1 + K)*k1^2 + (-5 - 3*f + 5*K)*k2^2) + 30*f^2*k2^2*st^2 - 21*f*((-5 + 4*C)*k1^2 + k3^2 + k2^2*(-5 + 4*C - 2*st^2))) + k2*(35*b1^2*k3^2*(2*f*k1^2 - 3*(-1 + K)*k2^2 + 3*K*k3^2) + 7*b1*(15*(b2*k3^4 + 2*g2*k3^2*(k2^2 - k3^2)) + 2*f^2*k1^2*(3*k1^2 + (3*k2^2 - k3^2)*st^2) - 5*f*((1 - 2*C)*k3^4 + k1^2*((-1 + K)*k2^2 - K*k3^2) + (-1 + K)*k2^4*st^2 + k2^2*k3^2*(-1 + 2*C - (1 + K)*st^2))) + f*(35*(b2*k3^2 + 2*g2*(k2^2 - k3^2))*(k1^2 + k2^2*st^2) + f^2*(-6*k1^4*st^2 + 6*k1^2*k2^2*st^4) - 7*f*(k2^2*st^2*((1 - 2*C)*k3^2 + k2^2*(-1 + 2*C - 3*st^2)) + k1^2*(3*(1 - 2*C)*k3^2 + k2^2*(-3 + 6*C - st^2))))) + ct*k1*(-105*b1*k3^2*(-4*g2*k2^2 + b1*(2*(-1 + K)*k2^2 + k3^2)) - 15*f^3*(k1^4 - k2^4*st^4) + 7*f^2*(k2^2*k3^2*(-6 + 12*C - st^2) + k1^2*(-3*(1 + 2*b1)*k3^2 + k2^2*(9 + 18*b1 - 12*C + st^2)) + k2^4*(-4*C*(3 + st^2) + 3*(2 + (3 + 2*b1)*st^2 + st^4))) + 35*f*(b1^2*(2*k2^2*k3^2 - k3^4) - b1*((-3 + 4*C - 2*K)*k2^2*k3^2 + k3^4 + k1^2*(2*(-1 + K)*k2^2 + k3^2) + 2*(-1 + K)*k2^4*(1 + st^2)) + 2*k2^2*(b2*k3^2 + 2*g2*(k1^2 - k3^2 + k2^2*(1 + st^2))))) + ct^2*k2*(-105*b1^2*(-1 + K)*k1^2*k3^2 + 7*b1*(30*g2*k1^2*k3^2 + 6*f^2*k1^2*(3*k2^2 - k3^2) - 5*f*((-1 + K)*k1^4 + (-1 + K)*k2^4 - (1 + K)*k2^2*k3^2 + k1^2*(2*C*k3^2 + (-1 + K)*k2^2*(4 + st^2)))) + f*(-6*f^2*(5*k1^4 - 6*k1^2*k2^2*st^2) + 35*(b2*k2^2*k3^2 + 2*g2*(k1^4 + k2^4 - k2^2*k3^2 + k1^2*k2^2*(4 + st^2))) - 7*f*(6*(-1 + C)*k1^4 + 3*k2^2*((1 - 2*C)*k3^2 + k2^2*(-1 + 2*C - 2*st^2)) + k1^2*(6*k3^2 + k2^2*(-21 - 8*st^2 + 2*C*(12 + st^2)))))))))))\/(315*alphak2^2*alphak3^2*k2*k3^4)"