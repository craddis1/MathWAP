"(((-2*I)\/495)*D1^4*Sqrt[Pi\/7]*Pk2*Pk3*(99*b1^2*k1^2*(f*gr1*(2*k1^2*k2^2 + 4*ct*k1*k2*(k2^2 - k3^2) + (k2^2 - k3^2)^2*(2*ct^2 - st^2)) + k3^2*(beta18*k2*(-2*ct*k1 - 2*ct^2*k2 + k2*st^2) + beta17*(2*k1^2 + 6*ct*k1*k2 + 6*ct^2*k2^2 - 3*k2^2*st^2))) + 11*b1*f*(-20*beta18*ct*k1^5*k2 - 18*ct^3*gr1*k1^5*k2 - 40*ct*f*gr1*k1^5*k2 + 18*ct^3*gr1*K*k1^5*k2 + 18*beta16*k1^4*k2^2 - 60*beta18*ct^2*k1^4*k2^2 - 36*beta19*ct^2*k1^4*k2^2 + 36*beta19*C*ct^2*k1^4*k2^2 + 18*ct^2*gr1*k1^4*k2^2 - 36*C*ct^2*gr1*k1^4*k2^2 - 18*ct^4*gr1*k1^4*k2^2 - 80*ct^2*f*gr1*k1^4*k2^2 + 36*ct^2*gr1*K*k1^4*k2^2 + 18*ct^4*gr1*K*k1^4*k2^2 - 18*beta14*ct*k1^3*k2^3 + 54*beta16*ct*k1^3*k2^3 - 54*beta19*ct*k1^3*k2^3 + 72*beta19*C*ct*k1^3*k2^3 - 60*beta18*ct^3*k1^3*k2^3 - 72*beta19*ct^3*k1^3*k2^3 + 72*beta19*C*ct^3*k1^3*k2^3 + 54*ct*gr1*k1^3*k2^3 - 72*C*ct*gr1*k1^3*k2^3 + 18*ct^3*gr1*k1^3*k2^3 - 36*C*ct^3*gr1*k1^3*k2^3 - 40*ct^3*f*gr1*k1^3*k2^3 + 18*ct*gr1*K*k1^3*k2^3 + 36*ct^3*gr1*K*k1^3*k2^3 - 18*beta19*k1^2*k2^4 + 36*beta19*C*k1^2*k2^4 - 36*beta14*ct^2*k1^2*k2^4 + 54*beta16*ct^2*k1^2*k2^4 - 108*beta19*ct^2*k1^2*k2^4 + 144*beta19*C*ct^2*k1^2*k2^4 - 20*beta18*ct^4*k1^2*k2^4 - 36*beta19*ct^4*k1^2*k2^4 + 36*beta19*C*ct^4*k1^2*k2^4 + 18*gr1*k1^2*k2^4 - 36*C*gr1*k1^2*k2^4 + 54*ct^2*gr1*k1^2*k2^4 - 72*C*ct^2*gr1*k1^2*k2^4 + 18*ct^2*gr1*K*k1^2*k2^4 - 36*beta19*ct*k1*k2^5 + 72*beta19*C*ct*k1*k2^5 - 18*beta14*ct^3*k1*k2^5 + 18*beta16*ct^3*k1*k2^5 - 54*beta19*ct^3*k1*k2^5 + 72*beta19*C*ct^3*k1*k2^5 + 18*ct*gr1*k1*k2^5 - 36*C*ct*gr1*k1*k2^5 - 18*beta19*ct^2*k2^6 + 36*beta19*C*ct^2*k2^6 + 18*beta14*k1^4*k3^2 + 18*ct^2*gr1*k1^4*k3^2 + 40*ct^2*f*gr1*k1^4*k3^2 + 54*beta14*ct*k1^3*k2*k3^2 - 18*beta16*ct*k1^3*k2*k3^2 + 18*beta19*ct*k1^3*k2*k3^2 - 20*beta18*ct^3*k1^3*k2*k3^2 - 18*ct*gr1*k1^3*k2*k3^2 - 18*ct^3*gr1*k1^3*k2*k3^2 + 36*C*ct^3*gr1*k1^3*k2*k3^2 + 40*ct^3*f*gr1*k1^3*k2*k3^2 - 18*ct*gr1*K*k1^3*k2*k3^2 + 18*beta19*k1^2*k2^2*k3^2 - 36*beta19*C*k1^2*k2^2*k3^2 + 54*beta14*ct^2*k1^2*k2^2*k3^2 - 18*beta16*ct^2*k1^2*k2^2*k3^2 + 36*beta19*ct^2*k1^2*k2^2*k3^2 - 20*beta18*ct^4*k1^2*k2^2*k3^2 - 36*beta19*ct^4*k1^2*k2^2*k3^2 + 36*beta19*C*ct^4*k1^2*k2^2*k3^2 - 18*gr1*k1^2*k2^2*k3^2 + 36*C*gr1*k1^2*k2^2*k3^2 - 72*ct^2*gr1*k1^2*k2^2*k3^2 + 72*C*ct^2*gr1*k1^2*k2^2*k3^2 - 18*ct^2*gr1*K*k1^2*k2^2*k3^2 + 36*beta19*ct*k1*k2^3*k3^2 - 72*beta19*C*ct*k1*k2^3*k3^2 - 36*beta19*ct^3*k1*k2^3*k3^2 + 72*beta19*C*ct^3*k1*k2^3*k3^2 - 36*ct*gr1*k1*k2^3*k3^2 + 72*C*ct*gr1*k1*k2^3*k3^2 + 18*beta14*ct^2*k1^2*k3^4 + 18*ct^2*gr1*k1^2*k3^4 + 18*beta14*ct^3*k1*k2*k3^4 - 18*beta16*ct^3*k1*k2*k3^4 + 18*beta19*ct^3*k1*k2*k3^4 + 18*ct*gr1*k1*k2*k3^4 - 36*C*ct*gr1*k1*k2*k3^4 + 18*beta19*ct^2*k2^2*k3^4 - 36*beta19*C*ct^2*k2^2*k3^4 + 3*beta18*k1^4*k2^2*st^2 + 9*ct^2*gr1*k1^4*k2^2*st^2 + 4*f*gr1*k1^4*k2^2*st^2 - 9*ct^2*gr1*K*k1^4*k2^2*st^2 + 9*beta18*ct*k1^3*k2^3*st^2 + 9*ct*gr1*k1^3*k2^3*st^2 + 6*ct*f*gr1*k1^3*k2^3*st^2 - 18*ct*gr1*K*k1^3*k2^3*st^2 + 18*beta14*k1^2*k2^4*st^2 - 27*beta16*k1^2*k2^4*st^2 + 6*beta18*ct^2*k1^2*k2^4*st^2 + 18*beta19*ct^2*k1^2*k2^4*st^2 - 18*beta19*C*ct^2*k1^2*k2^4*st^2 - 9*gr1*K*k1^2*k2^4*st^2 + 27*beta14*ct*k1*k2^5*st^2 - 27*beta16*ct*k1*k2^5*st^2 + 27*beta19*ct*k1*k2^5*st^2 - 36*beta19*C*ct*k1*k2^5*st^2 + 9*beta19*k2^6*st^2 - 18*beta19*C*k2^6*st^2 - 2*f*gr1*k1^4*k3^2*st^2 + 3*beta18*ct*k1^3*k2*k3^2*st^2 - 9*ct*gr1*k1^3*k2*k3^2*st^2 - 6*ct*f*gr1*k1^3*k2*k3^2*st^2 - 27*beta14*k1^2*k2^2*k3^2*st^2 + 9*beta16*k1^2*k2^2*k3^2*st^2 + 6*beta18*ct^2*k1^2*k2^2*k3^2*st^2 + 18*beta19*ct^2*k1^2*k2^2*k3^2*st^2 - 18*beta19*C*ct^2*k1^2*k2^2*k3^2*st^2 + 9*gr1*K*k1^2*k2^2*k3^2*st^2 + 18*beta19*ct*k1*k2^3*k3^2*st^2 - 36*beta19*C*ct*k1*k2^3*k3^2*st^2 - 9*beta14*k1^2*k3^4*st^2 - 27*beta14*ct*k1*k2*k3^4*st^2 + 27*beta16*ct*k1*k2*k3^4*st^2 - 9*beta19*ct*k1*k2*k3^4*st^2 - 9*beta19*k2^2*k3^4*st^2 + 18*beta19*C*k2^2*k3^4*st^2 + 6*beta18*k1^2*k2^4*st^4 + 6*beta18*k1^2*k2^2*k3^2*st^4 - 9*beta15*k1^2*k2*(ct*k1 + k2)*(2*k1^2 + 4*ct*k1*k2 + (k2^2 + k3^2)*(2*ct^2 - st^2)) + beta17*k1^2*(20*k1^4 + 100*ct*k1^3*k2 + 3*ct*k1*k2*(3*k2^2 + k3^2)*(20*ct^2 - 3*st^2) + k1^2*(10*k2^2 + k3^2)*(20*ct^2 - st^2) + 6*k2^2*(k2^2 + k3^2)*(10*ct^4 - 3*ct^2*st^2 - 3*st^4))) + f*(-10*(21*beta18 - 44*beta19*(-1 + C))*ct^6*f*k1^2*k2^4 - 10*ct^5*f*k1*k2^3*(22*beta15*k1^2 + 63*beta18*k1^2 + 22*(beta14 - beta16)*(k2^2 - k3^2) - 22*beta19*(4*(-1 + C)*k1^2 + (-3 + 4*C)*k2^2 + k3^2)) + 5*beta17*f*k1^2*(378*ct^5*k1*k2^3 + 126*ct^6*k2^4 + 30*ct^3*(7*k1^3*k2 + 3*k1*k2^3*st^2) + 15*ct^4*(28*k1^2*k2^2 + 3*k2^4*st^2) + 3*ct*(5*k1^3*k2*st^2 - 36*k1*k2^3*st^4) + st^2*(k1^4 - 24*k1^2*k2^2*st^2 - 27*k2^4*st^4) + 6*ct^2*(7*k1^4 + 10*k1^2*k2^2*st^2 - 18*k2^4*st^4)) - 2*ct^3*k1*k2*(220*f*gr1*k1^4 - 220*C*f*gr1*k1^4 - 210*f^2*gr1*k1^4 + 198*g2*gr1*k1^4 + 110*beta14*f*k1^2*k2^2 - 330*beta16*f*k1^2*k2^2 + 330*beta19*f*k1^2*k2^2 - 440*beta19*C*f*k1^2*k2^2 + 330*f*gr1*k1^2*k2^2 - 440*C*f*gr1*k1^2*k2^2 + 396*g2*gr1*k1^2*k2^2 + 220*beta19*f*k2^4 - 440*beta19*C*f*k2^4 - 330*beta14*f*k1^2*k3^2 + 110*beta16*f*k1^2*k3^2 - 110*beta19*f*k1^2*k3^2 - 110*f*gr1*k1^2*k3^2 - 220*beta19*f*k2^2*k3^2 + 440*beta19*C*f*k2^2*k3^2 - 66*beta19*f*k1^2*k2^2*st^2 + 66*beta19*C*f*k1^2*k2^2*st^2 - 55*beta14*f*k2^4*st^2 + 55*beta16*f*k2^4*st^2 - 99*beta19*f*k2^4*st^2 + 132*beta19*C*f*k2^4*st^2 + 55*beta14*f*k2^2*k3^2*st^2 - 55*beta16*f*k2^2*k3^2*st^2 + 33*beta19*f*k2^2*k3^2*st^2 + 15*beta18*f*k1^2*(7*k1^2 + 5*k2^2*st^2) + 11*beta15*f*k1^2*(10*k1^2 + k2^2*(20 - 3*st^2))) + st^2*(99*gr1*k1^2*k2^2*(b2*k3^2 + 2*g2*(k2^2 - k3^2)) + f^2*gr1*k1^4*(5*k1^2 - 12*k2^2*st^2) + f*(11*beta19*k1^2*k2^4 - 22*beta19*C*k1^2*k2^4 + 11*gr1*k1^2*k2^4 - 22*C*gr1*k1^2*k2^4 - 11*beta14*k1^4*k3^2 - 11*beta19*k1^2*k2^2*k3^2 + 22*beta19*C*k1^2*k2^2*k3^2 - 11*gr1*k1^2*k2^2*k3^2 + 22*C*gr1*k1^2*k2^2*k3^2 + 36*beta18*k1^4*k2^2*st^2 + 132*beta14*k1^2*k2^4*st^2 + 66*beta19*k2^6*st^2 - 132*beta19*C*k2^6*st^2 - 198*beta14*k1^2*k2^2*k3^2*st^2 - 66*beta19*k2^4*k3^2*st^2 + 132*beta19*C*k2^4*k3^2*st^2 + 45*beta18*k1^2*k2^4*st^4 + 11*beta15*k1^2*k2^2*(k1^2 + 6*k2^2*st^2) - 11*beta16*k1^2*k2^2*(k1^2 + 6*(3*k2^2 - 2*k3^2)*st^2))) + 2*ct^2*(15*f^2*gr1*k1^4*(7*k1^2 + k2^2*st^2) + 99*gr1*k1^2*k2^2*(-(b2*k3^2) + g2*(-2*k2^2 + 2*k3^2 + k1^2*(-4 + st^2))) + f*(-330*gr1*k1^4*k2^2 + 440*C*gr1*k1^4*k2^2 - 110*beta19*k1^2*k2^4 + 220*beta19*C*k1^2*k2^4 - 110*gr1*k1^2*k2^4 + 220*C*gr1*k1^2*k2^4 + 110*beta14*k1^4*k3^2 + 110*gr1*k1^4*k3^2 + 110*beta19*k1^2*k2^2*k3^2 - 220*beta19*C*k1^2*k2^2*k3^2 + 110*gr1*k1^2*k2^2*k3^2 - 220*C*gr1*k1^2*k2^2*k3^2 - 45*beta18*k1^4*k2^2*st^2 + 11*beta19*k1^4*k2^2*st^2 - 11*beta19*C*k1^4*k2^2*st^2 + 11*gr1*k1^4*k2^2*st^2 - 11*C*gr1*k1^4*k2^2*st^2 + 66*beta14*k1^2*k2^4*st^2 + 99*beta19*k1^2*k2^4*st^2 - 132*beta19*C*k1^2*k2^4*st^2 + 33*beta19*k2^6*st^2 - 66*beta19*C*k2^6*st^2 - 99*beta14*k1^2*k2^2*k3^2*st^2 - 33*beta19*k1^2*k2^2*k3^2*st^2 - 33*beta19*k2^4*k3^2*st^2 + 66*beta19*C*k2^4*k3^2*st^2 + 90*beta18*k1^2*k2^4*st^4 + 66*beta19*k1^2*k2^4*st^4 - 66*beta19*C*k1^2*k2^4*st^4 + 11*beta16*k1^2*k2^2*(10*k1^2 - 9*k2^2*st^2 + 6*k3^2*st^2) + 11*beta15*(3*k1^2*k2^4*st^2 + k1^4*k2^2*(-10 + 3*st^2)))) - ct^4*k2^2*(-210*f^2*gr1*k1^4 + 396*g2*gr1*k1^4 + 220*beta15*f*k1^2*(2*k1^2 + k2^2) - 220*f*k1^2*(2*(-1 + C)*gr1*k1^2 - 2*beta14*k2^2 + 3*beta16*k2^2 + 3*beta14*k3^2 - 2*beta16*k3^2) + 15*beta18*f*k1^2*(42*k1^2 + 5*k2^2*st^2) - 44*beta19*f*(10*(-1 + C)*k1^4 + 5*(-1 + 2*C)*k2^2*(k2^2 - k3^2) + k1^2*(10*k3^2 + k2^2*(-30 + 40*C + 3*st^2 - 3*C*st^2)))) + ct*k1*k2*(30*f^2*gr1*k1^4*st^2 + 198*gr1*k1^2*(-(b2*k3^2) + 2*g2*(k3^2 + k2^2*(-1 + st^2))) + f*(-11*gr1*k1^2*(k3^2*(-20 + 40*C + st^2) + k2^2*(20 - 3*st^2 + 4*C*(-10 + st^2))) + st^2*(-15*beta18*(k1^4 - 12*k1^2*k2^2*st^2) + 11*beta15*(k1^4 + 6*k1^2*k2^2*(1 + st^2)) + 11*(-(beta19*k1^2*((-3 + 4*C)*k2^2 + k3^2)) + beta16*k1^2*(-9*k2^2 + 3*k3^2) + 30*beta16*k2^2*(-k2^2 + k3^2)*st^2 + 3*beta14*(k1^2*(k2^2 - 3*k3^2) + 10*k2^2*(k2^2 - k3^2)*st^2) - 6*beta19*k2^2*(k3^2*(1 - 2*C + st^2) + k2^2*(-1 + 2*C - 3*st^2 + 4*C*st^2)))))))))\/(k1*k2^2*k3^4)"