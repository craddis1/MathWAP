"((I\/99)*D1^4*f*Sqrt[Pi\/35]*Pk2*Pk3*st^3*(6*f^2*gr1*k1^5 - 22*beta15*ct*f*k1^4*k2 + 12*ct*f^2*gr1*k1^4*k2 - 11*beta14*f*k1^3*k2^2 - 22*beta15*f*k1^3*k2^2 + 33*beta16*f*k1^3*k2^2 - 44*beta15*ct^2*f*k1^3*k2^2 - 44*beta19*ct^2*f*k1^3*k2^2 + 44*beta19*C*ct^2*f*k1^3*k2^2 - 22*b1*f*gr1*k1^3*k2^2 - 88*beta14*ct*f*k1^2*k2^3 - 44*beta15*ct*f*k1^2*k2^3 + 132*beta16*ct*f*k1^2*k2^3 - 66*beta19*ct*f*k1^2*k2^3 + 88*beta19*C*ct*f*k1^2*k2^3 - 88*beta19*ct^3*f*k1^2*k2^3 + 88*beta19*C*ct^3*f*k1^2*k2^3 - 99*b1*beta14*k1*k2^4 + 99*b1*beta16*k1*k2^4 - 22*beta19*f*k1*k2^4 + 44*beta19*C*f*k1*k2^4 - 110*beta14*ct^2*f*k1*k2^4 + 110*beta16*ct^2*f*k1*k2^4 - 132*beta19*ct^2*f*k1*k2^4 + 176*beta19*C*ct^2*f*k1*k2^4 - 44*beta19*ct*f*k2^5 + 88*beta19*C*ct*f*k2^5 + 33*beta14*f*k1^3*k3^2 - 11*beta16*f*k1^3*k3^2 + 22*b1*f*gr1*k1^3*k3^2 + 132*beta14*ct*f*k1^2*k2*k3^2 - 88*beta16*ct*f*k1^2*k2*k3^2 + 22*beta19*ct*f*k1^2*k2*k3^2 + 22*beta19*f*k1*k2^2*k3^2 - 44*beta19*C*f*k1*k2^2*k3^2 + 110*beta14*ct^2*f*k1*k2^2*k3^2 - 110*beta16*ct^2*f*k1*k2^2*k3^2 + 44*beta19*ct^2*f*k1*k2^2*k3^2 + 44*beta19*ct*f*k2^3*k3^2 - 88*beta19*C*ct*f*k2^3*k3^2 + 99*b1*beta14*k1*k3^4 - 99*b1*beta16*k1*k3^4 - 110*beta14*f*k1*k2^4*st^2 + 110*beta16*f*k1*k2^4*st^2 + 110*beta14*f*k1*k2^2*k3^2*st^2 - 110*beta16*f*k1*k2^2*k3^2*st^2 + 3*beta17*k1^2*(11*b1*(4*ct*k2*(k2^2 + k3^2) + k1*(3*k2^2 + k3^2)) + 5*f*(k1 + 2*ct*k2)*(k1^2 + 6*ct*k1*k2 + 6*k2^2*(ct^2 + st^2))) - beta18*k1^2*(11*b1*(4*ct*k2*(k2^2 + k3^2) + k1*(3*k2^2 + k3^2)) + 3*f*(k1 + 2*ct*k2)*(k1^2 + 10*ct*k1*k2 + 10*k2^2*(ct^2 + st^2)))))\/(k1*k2*k3^4)"