"(b1*D1^4*fNL*(b01*((b2 + 2*(-1 + ct^2)*g2)*k1*k2*(Mk1 + Mk2) + b1*(-(ct^2*(-1 + K)*k1*k2*(Mk1 + Mk2)) + (1 + K)*k1*k2*(Mk1 + Mk2) + ct*k2^2*(2*Mk1 + Mk2) + ct*k1^2*(Mk1 + 2*Mk2))) + b1*k1*k2*(b11*(Mk1 + Mk2) + 2*b1*Mk3))*Pk1*Pk2)\/(k1*k2*Mk1*Mk2) + (D1^4*f*fNL*(b01*((b2 + 2*(-1 + ct^2)*g2)*k1*k2*k3^2*Mk1 + b1^2*k1*k2*k3^2*(2*Mk1 + Mk2) + b1*(ct^2*k1*k2*(-((-1 + K)*k3^2*Mk1) - 2*(-1 + C)*k1^2*(Mk1 + Mk2)) + k1*k2*((1 + K)*k3^2*Mk1 + 2*C*k1^2*(Mk1 + Mk2)) + ct*(2*k2^2*k3^2*Mk1 + k1^4*(Mk1 + Mk2) + k1^2*(k2^2 + k3^2)*(Mk1 + Mk2)))) + b1*k1*k2*(b11*k3^2*(Mk1 + Mk2) + 2*b1*(k1^2 + k3^2)*Mk3))*mu^2*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (D1^4*f^2*fNL*(b01*(-2*(-1 + C)*ct^2*k1^2*k2 + ct*k1*(k1^2 + k2^2) + 2*k2*(C*k1^2 + b1*k3^2))*Mk1 + 2*b1*k1^2*k2*Mk3)*mu^4*Pk1*Pk2)\/(k2*k3^2*Mk1*Mk2) + (b1*D1^4*f*fNL*(b01*(4*C*k1^2*k2^2*(Mk1 + Mk2) - 4*(-1 + C)*ct^2*k1^2*k2^2*(Mk1 + Mk2) + 2*ct*k1*k2*(k1^2 + k2^2)*(Mk1 + Mk2) + b1*k3^2*(k2^2*(2*Mk1 + Mk2) + k1^2*(Mk1 + 2*Mk2))) + 4*b1*k1^2*k2^2*Mk3)*mu*mu2*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (2*D1^4*f^2*fNL*(b01*(2*C*k1^2*k2^2*Mk1 - 2*(-1 + C)*ct^2*k1^2*k2^2*Mk1 + ct*k1*k2*(k1^2 + k2^2)*Mk1 + b1*k3^2*(k2^2*Mk1 + k1^2*(Mk1 + Mk2))) + 2*b1*k1^2*k2^2*Mk3)*mu^3*mu2*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (b01*D1^4*f^3*fNL*k1*mu^5*mu2*Pk1*Pk2)\/(k2*Mk2) + (D1^4*f*fNL*(b01*((b2 + 2*(-1 + ct^2)*g2)*k1*k2*k3^2*Mk2 + b1^2*k1*k2*k3^2*(Mk1 + 2*Mk2) + b1*(ct^2*k1*k2*(-((-1 + K)*k3^2*Mk2) - 2*(-1 + C)*k2^2*(Mk1 + Mk2)) + k1*k2*((1 + K)*k3^2*Mk2 + 2*C*k2^2*(Mk1 + Mk2)) + ct*(k2^2*(k2^2 + k3^2)*(Mk1 + Mk2) + k1^2*(2*k3^2*Mk2 + k2^2*(Mk1 + Mk2))))) + b1*k1*k2*(b11*k3^2*(Mk1 + Mk2) + 2*b1*(k2^2 + k3^2)*Mk3))*mu2^2*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (D1^4*f^2*fNL*(b01*(-2*(-1 + C)*ct^2*k1*k2*(k2^2*Mk1 + k1^2*Mk2) + ct*(k1^2 + k2^2 + k3^2)*(k2^2*Mk1 + k1^2*Mk2) + 2*k1*k2*(2*b1*k3^2*(Mk1 + Mk2) + C*(k2^2*Mk1 + k1^2*Mk2))) + k1*k2*(b11*k3^2*(Mk1 + Mk2) + 2*b1*(k1^2 + k2^2 + k3^2)*Mk3))*mu^2*mu2^2*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (D1^4*f^3*fNL*(3*b01*k3^2*Mk1 + 2*k1^2*Mk3)*mu^4*mu2^2*Pk1*Pk2)\/(k3^2*Mk1*Mk2) + (2*D1^4*f^2*fNL*(b01*k1*k2*(2*C*k1*k2 - 2*(-1 + C)*ct^2*k1*k2 + ct*(k1^2 + k2^2))*Mk2 + b01*b1*k3^2*(k1^2*Mk2 + k2^2*(Mk1 + Mk2)) + 2*b1*k1^2*k2^2*Mk3)*mu*mu2^3*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (2*D1^4*f^3*fNL*(b01*k3^2*(k2^2*Mk1 + k1^2*Mk2) + 2*k1^2*k2^2*Mk3)*mu^3*mu2^3*Pk1*Pk2)\/(k1*k2*k3^2*Mk1*Mk2) + (D1^4*f^2*fNL*(b01*(-2*(-1 + C)*ct^2*k1*k2^2 + ct*k2*(k1^2 + k2^2) + 2*k1*(C*k2^2 + b1*k3^2))*Mk2 + 2*b1*k1*k2^2*Mk3)*mu2^4*Pk1*Pk2)\/(k1*k3^2*Mk1*Mk2) + (D1^4*f^3*fNL*(3*b01*k3^2*Mk2 + 2*k2^2*Mk3)*mu^2*mu2^4*Pk1*Pk2)\/(k3^2*Mk1*Mk2) + (b01*D1^4*f^3*fNL*k2*mu*mu2^5*Pk1*Pk2)\/(k1*Mk1) + (b1*D1^4*fNL*(b1*k1*k3^2*(2*b1*Mk2 + b11*(Mk1 + Mk3)) + b01*(b2*k1*k3^2*(Mk1 + Mk3) + 2*g2*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)*(Mk1 + Mk3) - b1*(k1*k3^2*Mk1 + k1^3*Mk3 - ct^2*k1*k2^2*(Mk1 + Mk3) + K*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)*(Mk1 + Mk3) + ct*k2*(-(k1^2*Mk1) + k3^2*(2*Mk1 + Mk3)))))*Pk1*Pk3)\/(k1*k3^2*Mk1*Mk3) + (D1^4*f*fNL*(-(b01*(b1*((1 + K)*k1^3 + 2*ct*K*k1^2*k2 + 2*ct*k2*k3^2 + (-1 + K)*k1*(ct^2*k2^2 - k3^2)) - k1*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)))*(k3^2*Mk1 + k1^2*Mk3)) + b1*k1*k3^2*(k1^2 + k3^2)*(2*b1*Mk2 + b11*(Mk1 + Mk3)))*mu^2*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) - (D1^4*f^2*fNL*k1*(b01*(k1 + ct*k2)*(k3^2*Mk1 + k1^2*Mk3) - k1*k3^2*(2*b1*Mk2 + b11*(Mk1 + Mk3)))*mu^4*Pk1*Pk3)\/(k3^4*Mk1*Mk3) + (D1^4*f*fNL*k2*(2*b1*k1^2*k3^2*(2*b1*Mk2 + b11*(Mk1 + Mk3)) + b01*(2*k1^2*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2))*Mk3 + b1^2*k3^2*(-(k3^2*(2*Mk1 + Mk3)) + k1^2*(Mk1 + 2*Mk3)) - 2*b1*k1*((1 + K)*k1^3*Mk3 + 2*ct*K*k1^2*k2*Mk3 + ct^2*(-1 + K)*k1*k2^2*Mk3 + ct*k2*k3^2*(Mk1 + Mk3) + k1*k3^2*(Mk1 - K*Mk3))))*mu*mu2*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) - (2*D1^4*f^2*fNL*k2*(-(k1^2*k3^2*(2*b1*Mk2 + b11*(Mk1 + Mk3))) + b01*(k1^2*k3^2*Mk1 + ct*k1*k2*k3^2*Mk1 + b1*k3^4*Mk1 + ct*k1^3*k2*Mk3 + k1^4*(Mk3 - b1*Mk3)))*mu^3*mu2*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) + (b01*D1^4*f^3*fNL*k2*(-(k1*k3^2*Mk1) + k1^3*Mk3)*mu^5*mu2*Pk1*Pk3)\/(k3^4*Mk1*Mk3) + (D1^4*f*fNL*(b1*k1*k3^2*(2*b1*(k2^2 + k3^2)*Mk2 + b11*k2^2*(Mk1 + Mk3)) + b01*(k1*k2^2*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2))*Mk3 + b1^2*k1*k2^2*k3^2*(Mk1 + 2*Mk3) - b1*(ct*k2*k3^2*(k2^2 + k3^2)*(Mk1 + Mk3) + k1^3*((1 + K)*k2^2*Mk3 + (-1 + 2*C)*k3^2*(Mk1 + Mk3)) + ct*k1^2*k2*(2*K*k2^2*Mk3 + (-3 + 4*C)*k3^2*(Mk1 + Mk3)) + k1*(ct^2*(-1 + K)*k2^4*Mk3 - (-1 + 2*C)*k3^4*(Mk1 + Mk3) + k2^2*k3^2*(Mk1 + 2*(-1 + C)*ct^2*Mk1 + 2*(-1 + C)*ct^2*Mk3 - K*Mk3)))))*mu2^2*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) - (D1^4*f^2*fNL*(-(k1*k3^2*(2*b1*(k1^2 + k2^2 + k3^2)*Mk2 + b11*k2^2*(Mk1 + Mk3))) + b01*(ct*k2*k3^2*(k2^2 + k3^2)*Mk1 + (-1 + 2*C)*k1^5*Mk3 + (-3 + 4*C)*ct*k1^4*k2*Mk3 + k1^3*((-1 + 2*C)*k3^2*(Mk1 - Mk3) + (1 - 6*b1 + 2*(-1 + C)*ct^2)*k2^2*Mk3) + ct*k1^2*k2*(k2^2*Mk3 + k3^2*((-3 + 4*C)*Mk1 + Mk3)) + k1*k3^2*((1 - 2*C)*k3^2*Mk1 + k2^2*((1 + 2*b1 - 2*ct^2 + 2*C*ct^2)*Mk1 + 2*b1*Mk3))))*mu^2*mu2^2*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) + (D1^4*f^3*fNL*(2*k1^2*k3^2*Mk2 + b01*k2^2*(-3*k3^2*Mk1 + 2*k1^2*Mk3))*mu^4*mu2^2*Pk1*Pk3)\/(k3^4*Mk1*Mk3) - (2*D1^4*f^2*fNL*k2*(-2*b1*k1^2*k3^2*Mk2 + b01*k1*((-1 + 2*C)*k1^3 + (-3 + 4*C)*ct*k1^2*k2 + 2*(-1 + C)*ct^2*k1*k2^2 + (1 - 2*C)*k1*k3^2 + ct*k2*k3^2)*Mk3 + b01*b1*k2^2*(-3*k1^2*Mk3 + k3^2*(Mk1 + Mk3)))*mu*mu2^3*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) + (2*D1^4*f^3*fNL*(-(b01*k2^3*Mk1) + 2*k1^2*k2*Mk2)*mu^3*mu2^3*Pk1*Pk3)\/(k1*k3^2*Mk1*Mk3) + (D1^4*f^2*fNL*k2^2*(b01*((1 - 2*C)*k1^3 + (3 - 4*C)*ct*k1^2*k2 - ct*k2*k3^2 - k1*(2*(-1 + C)*ct^2*k2^2 + (1 - 2*C)*k3^2))*Mk3 + 2*b1*k1*(k3^2*Mk2 + b01*k2^2*Mk3))*mu2^4*Pk1*Pk3)\/(k1*k3^4*Mk1*Mk3) + (2*D1^4*f^3*fNL*(k2^2*k3^2*Mk2 - b01*k2^4*Mk3)*mu^2*mu2^4*Pk1*Pk3)\/(k3^4*Mk1*Mk3) - (b01*D1^4*f^3*fNL*k2^5*mu*mu2^5*Pk1*Pk3)\/(k1*k3^4*Mk1) + (b1*D1^4*fNL*(2*b1^2*k2*k3^2*Mk1 + b1*b11*k2*k3^2*(Mk2 + Mk3) + b01*k2*(2*ct^2*g2*k1^2 + 4*ct*g2*k1*k2 + b2*k3^2 + 2*g2*(k2^2 - k3^2))*(Mk2 + Mk3) - b01*b1*(k2*k3^2*Mk2 + k2^3*Mk3 + ct^2*(-1 + K)*k1^2*k2*(Mk2 + Mk3) + K*k2*(k2^2 - k3^2)*(Mk2 + Mk3) + ct*k1*k3^2*(2*Mk2 + Mk3) + ct*k1*k2^2*((-1 + 2*K)*Mk2 + 2*K*Mk3)))*Pk2*Pk3)\/(k2*k3^2*Mk2*Mk3) + (D1^4*f*fNL*(b01*k1^2*k2*(2*ct^2*g2*k1^2 + 4*ct*g2*k1*k2 + b2*k3^2 + 2*g2*(k2^2 - k3^2))*Mk3 + b1*b11*k1^2*k2*k3^2*(Mk2 + Mk3) + b1^2*k2*k3^2*(2*k3^2*Mk1 + k1^2*(2*Mk1 + b01*(Mk2 + 2*Mk3))) - b01*b1*(ct^2*k1^2*k2*((-1 + K)*k1^2*Mk3 + 2*(-1 + C)*k3^2*(Mk2 + Mk3)) + ct*k1*(k3^2*((-3 + 4*C)*k2^2 + k3^2)*(Mk2 + Mk3) + k1^2*(2*K*k2^2*Mk3 + k3^2*(Mk2 + Mk3))) + k2*((-1 + 2*C)*k3^2*(k2^2 - k3^2)*(Mk2 + Mk3) + k1^2*((1 + K)*k2^2*Mk3 + k3^2*(Mk2 - K*Mk3)))))*mu^2*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) + (D1^4*f^2*fNL*k1^2*(b01*(-2*(-1 + C)*ct^2*k1^2*k2 - (-1 + 2*C)*k2*(k2^2 - k3^2) - ct*k1*((-3 + 4*C)*k2^2 + k3^2))*Mk3 + 2*b1*k2*(k3^2*Mk1 + b01*k1^2*Mk3))*mu^4*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) + (D1^4*f*fNL*k1*(2*b01*k2^2*(2*ct^2*g2*k1^2 + 4*ct*g2*k1*k2 + 2*g2*k2^2 + b2*k3^2 - 2*g2*k3^2)*Mk3 + b1^2*(-(b01*k3^4*(2*Mk2 + Mk3)) + k2^2*k3^2*(4*Mk1 + b01*Mk2 + 2*b01*Mk3)) - 2*b1*k2*(-(b11*k2*k3^2*(Mk2 + Mk3)) + b01*(ct^2*(-1 + K)*k1^2*k2*Mk3 + (1 + K)*k2^3*Mk3 + k2*k3^2*(Mk2 - K*Mk3) + ct*k1*(2*K*k2^2*Mk3 + k3^2*(Mk2 + Mk3)))))*mu*mu2*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) - (2*D1^4*f^2*fNL*k1*(b01*k2*(2*(-1 + C)*ct^2*k1^2*k2 + (-1 + 2*C)*k2*(k2^2 - k3^2) + ct*k1*((-3 + 4*C)*k2^2 + k3^2))*Mk3 + b1*(b01*k1^2*k3^2*(Mk2 + Mk3) - k2^2*(2*k3^2*Mk1 + 3*b01*k1^2*Mk3)))*mu^3*mu2*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) - (b01*D1^4*f^3*fNL*k1^5*mu^5*mu2*Pk2*Pk3)\/(k2*k3^4*Mk2) + (D1^4*f*fNL*(2*b1^2*k2*k3^2*(k2^2 + k3^2)*Mk1 + b1*b11*k2*k3^2*(k2^2 + k3^2)*(Mk2 + Mk3) + b01*k2*(2*ct^2*g2*k1^2 + 4*ct*g2*k1*k2 + b2*k3^2 + 2*g2*(k2^2 - k3^2))*(k3^2*Mk2 + k2^2*Mk3) - b01*b1*(ct^2*(-1 + K)*k1^2*k2 + (1 + K)*k2^3 - (-1 + K)*k2*k3^2 + 2*ct*k1*(K*k2^2 + k3^2))*(k3^2*Mk2 + k2^2*Mk3))*mu2^2*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) - (D1^4*f^2*fNL*(-(b11*k1^2*k2*k3^2*(Mk2 + Mk3)) + b01*(2*(-1 + C)*ct^2*k1^2*k2 + ct*k1*(k1^2 + (-3 + 4*C)*k2^2 + k3^2) + k2*(k1^2 + (-1 + 2*C)*(k2^2 - k3^2)))*(k3^2*Mk2 + k2^2*Mk3) - 2*b1*k2*(k3^2*(k2^2 + k3^2)*Mk1 + k1^2*(3*b01*k2^2*Mk3 + k3^2*(Mk1 - b01*(Mk2 + Mk3)))))*mu^2*mu2^2*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) + (2*D1^4*f^3*fNL*(k1^2*k3^2*Mk1 - b01*k1^4*Mk3)*mu^4*mu2^2*Pk2*Pk3)\/(k3^4*Mk2*Mk3) - (2*D1^4*f^2*fNL*k1*(b1*(-2*k2^2*k3^2*Mk1 + b01*k3^4*Mk2 - b01*k2^4*Mk3) + k2*(-(b11*k2*k3^2*(Mk2 + Mk3)) + b01*(ct*k1 + k2)*(k3^2*Mk2 + k2^2*Mk3)))*mu*mu2^3*Pk2*Pk3)\/(k2*k3^4*Mk2*Mk3) + (2*D1^4*f^3*fNL*(2*k1*k2^2*Mk1 - b01*k1^3*Mk2)*mu^3*mu2^3*Pk2*Pk3)\/(k2*k3^2*Mk2*Mk3) - (D1^4*f^2*fNL*k2*(-2*b1*k2*k3^2*Mk1 - b11*k2*k3^2*(Mk2 + Mk3) + b01*(ct*k1 + k2)*(k3^2*Mk2 + k2^2*Mk3))*mu2^4*Pk2*Pk3)\/(k3^4*Mk2*Mk3) + (D1^4*f^3*fNL*(-3*b01*k1^2*k3^2*Mk2 + 2*k2^2*(k3^2*Mk1 + b01*k1^2*Mk3))*mu^2*mu2^4*Pk2*Pk3)\/(k3^4*Mk2*Mk3) + (b01*D1^4*f^3*fNL*k1*(-(k2*k3^2*Mk2) + k2^3*Mk3)*mu*mu2^5*Pk2*Pk3)\/(k3^4*Mk2*Mk3)"