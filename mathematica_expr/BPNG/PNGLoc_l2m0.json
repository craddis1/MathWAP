"(2*D1^4*f*fNL*Sqrt[Pi\/5]*Pk1*Pk3*(k1*k3^2*(7*b1*b11*(Mk1 + Mk3)*(2*k1^2 + 4*ct*k1*k2 + 2*ct^2*k2^2 + 2*k3^2 - k2^2*st^2) + 14*b1^2*Mk2*(2*k1^2 + 4*ct*k1*k2 + 2*k3^2 + 2*ct^2*(k2^2 + k3^2) - k2^2*st^2 - k3^2*st^2) + b11*f*(Mk1 + Mk3)*(12*k1^2 + 24*ct*k1*k2 + k2^2*(12*ct^2 + st^2)) + 2*f^2*Mk2*(20*ct^3*k1*k2 + 10*ct^4*k2^2 + k1^2*st^2 + 6*ct*k1*k2*st^2 + 2*ct^2*(5*k1^2 + 3*k2^2*st^2)) + 2*b1*f*Mk2*(12*ct^4*k2^2 + 6*ct*k1*k2*(4 + 4*ct^2 + st^2) + k1^2*(12 + 12*ct^2 + st^2) + st^2*(k3^2 + k2^2*(1 - 6*st^2)) + 6*ct^2*(2*k3^2 + k2^2*(2 + st^2)))) + b01*(7*b1^2*k2*k3^2*(-2*ct*k3^2*(2*Mk1 + Mk3) + 2*ct*k1^2*(Mk1 + 2*Mk3) + 2*ct^2*k1*k2*(Mk1 + 2*Mk3) - k1*k2*(Mk1 + 2*Mk3)*st^2) - f^2*k2*(20*ct^4*k1*k2^3*Mk3 + 10*ct^5*k2^4*Mk3 + k1*k2*(3*k3^2*Mk1 - 2*k1^2*Mk3)*st^2 + ct*(10*k1^2*k3^2*Mk1 - 10*k1^4*Mk3 + 6*k2^2*k3^2*Mk1*st^2) + 2*ct^2*k1*k2*(15*k3^2*Mk1 - 10*k1^2*Mk3 + 6*k2^2*Mk3*st^2) + 10*ct^3*(2*k2^2*k3^2*Mk1 + k2^4*Mk3*st^2)) + 7*k1*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2))*(2*k3^2*Mk1 + Mk3*(2*k1^2 + 4*ct*k1*k2 + k2^2*(2*ct^2 - st^2))) - b1*(14*(1 + K)*k1^5*Mk3 + 4*ct*(7 - 6*f + 14*K)*k1^4*k2*Mk3 + ct*k2*k3^2*(2*ct^2*((7 + 12*f)*k2^2 + 7*k3^2)*(Mk1 + Mk3) + (-7 + 6*f)*k2^2*(Mk1 + Mk3)*st^2 + k3^2*(-7*Mk3*st^2 + Mk1*(28 + 24*f - 7*st^2))) + ct*k1^2*k2*(-2*k2^2*Mk3*(2*ct^2*(7 + 18*f - 14*K) + (9*f + 7*K)*st^2) + 7*k3^2*(Mk3*(4 + (-6 + 8*C)*ct^2 - 4*K + 3*st^2 - 4*C*st^2) + Mk1*(4 + (-6 + 8*C)*ct^2 + 4*K + 3*st^2 - 4*C*st^2))) + k1^3*(-(k2^2*Mk3*(12*ct^2*(6*f - 7*K) + (7 + 6*f + 7*K)*st^2)) + 7*k3^2*(Mk3*(2 + (-2 + 4*C)*ct^2 - 2*K + st^2 - 2*C*st^2) + Mk1*(2 + (-2 + 4*C)*ct^2 + 2*K + st^2 - 2*C*st^2))) + k1*(-2*ct^4*((7 + 12*f - 7*K)*k2^4*Mk3 - 14*(-1 + C)*k2^2*k3^2*(Mk1 + Mk3)) + k2^2*k3^2*(-7*Mk1 + 2*f*Mk1 + 2*f*Mk3 + 7*K*Mk3)*st^2 + 12*f*k2^4*Mk3*st^4 - 7*k3^4*((1 - 2*C)*Mk3*st^2 + Mk1*(-2 + 2*K + st^2 - 2*C*st^2)) + ct^2*(-14*(-1 + 2*C)*k3^4*(Mk1 + Mk3) + (7 - 12*f - 7*K)*k2^4*Mk3*st^2 + 2*k2^2*k3^2*(12*f*Mk1 + 12*f*Mk3 + 7*Mk1*(2 + K - (-1 + C)*st^2) - 7*Mk3*(-2 + K + (-1 + C)*st^2))))) - f*(k1^5*Mk3*(12 + 12*(-1 + 2*C)*ct^2 + (-1 + 2*C)*st^2) + ct*k1^4*k2*Mk3*(36 + 12*(-5 + 8*C)*ct^2 + (-9 + 16*C)*st^2) + ct*k1^2*k2*(k3^2*(Mk3*((36 - 48*C)*ct^2 + (7 - 12*C)*st^2) + Mk1*(36 + 12*(-3 + 4*C)*ct^2 + (-3 + 4*C)*st^2)) + k2^2*Mk3*(12*(-7 + 8*C)*ct^4 + st^2 - 6*(-3 + 4*C)*st^4 + 6*ct^2*(2 + (-5 + 6*C)*st^2))) + k1^3*(k3^2*(-((-1 + 2*C)*Mk3*(12*ct^2 + st^2)) + Mk1*(12 + 12*(-1 + 2*C)*ct^2 + (-1 + 2*C)*st^2)) + k2^2*Mk3*(36*(-3 + 4*C)*ct^4 + st^2 + (6 - 12*C)*st^4 + ct^2*(36 + (-26 + 38*C)*st^2))) + ct*k2*k3^2*(12*ct^4*k2^2*Mk3 + st^2*(k3^2*Mk1 + k2^2*(Mk1 - 6*Mk3*st^2)) + 6*ct^2*(2*k3^2*Mk1 + k2^2*(2*Mk1 + Mk3*st^2))) + k1*(24*(-1 + C)*ct^6*k2^4*Mk3 + 12*ct^4*(k2^2*k3^2*(2*(-1 + C)*Mk1 + (3 - 2*C)*Mk3) + (-1 + C)*k2^4*Mk3*st^2) + k3^2*st^2*((1 - 2*C)*k3^2*Mk1 + k2^2*(Mk1 + 6*(-1 + 2*C)*Mk3*st^2)) - 2*ct^2*(6*(-1 + 2*C)*k3^4*Mk1 + 6*(-1 + C)*k2^4*Mk3*st^4 + k2^2*k3^2*(6*(-1 + C)*Mk3*st^2 + Mk1*(-18 + st^2 - C*st^2))))))))\/(21*k1*k3^4*Mk1*Mk3) - (2*D1^4*f*fNL*Sqrt[Pi\/5]*Pk2*Pk3*(-2*b01*ct^5*f*k1*k2^2*(-((6 + 5*f)*k3^2*Mk2) + (-6 + 5*f)*k2^2*Mk3) + 2*ct^4*k2*(-14*b01*g2*k1^2*(k3^2*Mk2 + k2^2*Mk3) - 5*f^2*(-3*b01*k1^2*k3^2*Mk2 + 2*k2^2*(k3^2*Mk1 + b01*k1^2*Mk3)) + 6*f*(-(b11*k2^2*k3^2*(Mk2 + Mk3)) + b01*(2*C*k1^2 + k2^2)*(k3^2*Mk2 + k2^2*Mk3))) - 14*b1^2*k3^2*(k1^2*k2*(2*Mk1 + b01*(Mk2 + 2*Mk3)) + ct*k1*(-(b01*k3^2*(2*Mk2 + Mk3)) + k2^2*(4*Mk1 + b01*(Mk2 + 2*Mk3))) + k2*Mk1*(2*ct^2*(k2^2 + k3^2) - k2^2*st^2 - k3^2*(-2 + st^2))) + 2*ct^3*k1*(-28*b01*g2*k2^2*(k3^2*Mk2 + (k1^2 + k2^2)*Mk3) - 5*f^2*(-2*b01*k1^2*k3^2*Mk2 + b01*k2^4*Mk3*st^2 + k2^2*k3^2*(4*Mk1 - b01*Mk2*st^2)) + 3*f*(-4*b11*k2^2*k3^2*(Mk2 + Mk3) + 2*b01*k1^2*(k3^2*Mk2 + (-3 + 4*C)*k2^2*Mk3) + b01*(k3^2*Mk2 + k2^2*Mk3)*(2*k3^2 + k2^2*(-2 + 8*C + st^2)))) - b1*(7*b11*k2*k3^2*(Mk2 + Mk3)*(2*k1^2 + 4*ct*k1*k2 + (k2^2 + k3^2)*(2*ct^2 - st^2)) + 2*f*(12*b01*k1^4*k2*Mk3 - 12*b01*ct*k1^3*(-3*k2^2*Mk3 + k3^2*(Mk2 + Mk3)) + 3*ct*k1*(-(b01*k3^4*Mk2*(4*ct^2 + st^2)) + b01*k2^4*Mk3*(4*ct^2 + st^2) + 2*k2^2*k3^2*Mk1*(4 + 4*ct^2 + st^2)) + k2*k3^2*Mk1*(12*ct^4*k2^2 + st^2*(k3^2 + k2^2*(1 - 6*st^2)) + 6*ct^2*(2*k3^2 + k2^2*(2 + st^2))) + k1^2*(3*b01*k2^3*Mk3*(12*ct^2 + st^2) + k2*k3^2*(-(b01*(Mk2 + Mk3)*(12*ct^2 + st^2)) + Mk1*(12 + 12*ct^2 + st^2)))) - 7*b01*(2*ct^4*(-1 + K)*k1^2*k2*(k3^2*Mk2 + k2^2*Mk3) + 4*ct^3*k1*(k3^4*Mk2 - k1^2*k2^2*Mk3 + k2^2*k3^2*Mk3 + K*k2^2*(k3^2*Mk2 + (k1^2 + k2^2)*Mk3)) + 2*ct*k1*(k1^2*(2*K*k2^2*Mk3 + k3^2*(Mk2 + Mk3)) + k3^4*(Mk2 + Mk3 - Mk2*st^2) + k2^4*Mk3*(2 - K*(-2 + st^2)) + k2^2*k3^2*(Mk3*(-3 + 4*C - 2*K - st^2) + Mk2*(-1 + 4*C - K*st^2))) + ct^2*k2*(2*(1 + K)*k2^4*Mk3 + 4*C*k1^2*k3^2*(Mk2 + Mk3) - (-1 + K)*(2*k3^4*Mk2 - 2*k1^4*Mk3 + k1^2*k3^2*Mk2*st^2) + k2^2*(2*k3^2*(Mk2 + K*Mk2 + Mk3 - K*Mk3) + k1^2*Mk3*(8*K + st^2 - K*st^2))) - k2*(-2*k1^2*((1 + K)*k2^2*Mk3 + k3^2*(Mk2 - K*Mk3)) + (1 + K)*k2^4*Mk3*st^2 + k3^4*(2*(-1 + 2*C)*Mk3 + Mk2*(-2 + 4*C + st^2 - K*st^2)) + k2^2*k3^2*(Mk3*(2 - 4*C - (-1 + K)*st^2) + Mk2*(2 - 4*C + (1 + K)*st^2))))) + k2*(-(f*k3^2*st^2*(2*f*k1^2*Mk1 + b11*(Mk2 + Mk3)*(k1^2 - 6*k2^2*st^2))) + b01*(2*f^2*k1^4*Mk3*st^2 + 7*(b2*k3^2 + 2*g2*(k2^2 - k3^2))*(-2*k1^2*Mk3 + (k3^2*Mk2 + k2^2*Mk3)*st^2) + f*(-((k3^2*Mk2 + k2^2*Mk3)*st^2*((-1 + 2*C)*k3^2 + k2^2*(1 - 2*C + 6*st^2))) + k1^2*(k2^2*Mk3*(-12 + 24*C + st^2) + k3^2*((12 - 24*C)*Mk3 + Mk2*st^2))))) + ct*k1*(-6*f*k2^2*k3^2*(2*f*Mk1 + b11*(Mk2 + Mk3))*st^2 + b01*(2*f^2*(5*k1^4*Mk3 + 3*k1^2*k3^2*Mk2*st^2) + 28*k2^2*(-(b2*k3^2*Mk3) + g2*(-2*k1^2*Mk3 + k2^2*Mk3*(-2 + st^2) + k3^2*(2*Mk3 + Mk2*st^2))) + f*(k3^4*Mk2*st^2 + k2^2*k3^2*(Mk2*st^2*(3 + 4*C - 6*st^2) + Mk3*(24 - 48*C + st^2)) + k1^2*(k2^2*Mk3*(-36 + 48*C + st^2) + k3^2*(12*Mk3 + Mk2*st^2)) + k2^4*Mk3*(4*C*(12 + st^2) + 3*(-8 + st^2 - 2*st^4))))) + 2*ct^2*k2*(f^2*(10*b01*k1^4*Mk3 - 6*k2^2*k3^2*Mk1*st^2 + k1^2*(-6*b01*k2^2*Mk3*st^2 + k3^2*(-10*Mk1 + 9*b01*Mk2*st^2))) - 7*b01*(b2*k3^2*(k3^2*Mk2 + k2^2*Mk3) + g2*(-2*k3^4*Mk2 + 2*k1^4*Mk3 + 2*k2^4*Mk3 - k1^2*k3^2*Mk2*st^2 + k2^2*(2*k3^2*(Mk2 - Mk3) - k1^2*Mk3*(-8 + st^2)))) + f*(-3*b11*k3^2*(Mk2 + Mk3)*(2*k1^2 + k2^2*st^2) + b01*(12*(-1 + C)*k1^4*Mk3 + 3*(k3^2*Mk2 + k2^2*Mk3)*(2*(1 - 2*C)*k3^2 + k2^2*(-2 + 4*C + st^2)) + k1^2*(k2^2*Mk3*(2*(-15 + st^2) + C*(48 + st^2)) + k3^2*(12*Mk3 + Mk2*(6 + (2 + C)*st^2))))))))\/(21*k2*k3^4*Mk2*Mk3) + (2*D1^4*f*fNL*Sqrt[Pi\/5]*Pk1*Pk2*(k1*k2*(7*b1*b11*k3^2*(Mk1 + Mk2)*(2 + 2*ct^2 - st^2) + b11*f*k3^2*(Mk1 + Mk2)*(12*ct^2 + st^2) + 14*b1^2*Mk3*(2*k1^2 + 4*ct*k1*k2 + 2*k3^2 + 2*ct^2*(k2^2 + k3^2) - k2^2*st^2 - k3^2*st^2) + 2*f^2*Mk3*(20*ct^3*k1*k2 + 10*ct^4*k2^2 + k1^2*st^2 + 6*ct*k1*k2*st^2 + 2*ct^2*(5*k1^2 + 3*k2^2*st^2)) + 2*b1*f*Mk3*(12*ct^4*k2^2 + 6*ct*k1*k2*(4 + 4*ct^2 + st^2) + k1^2*(12 + 12*ct^2 + st^2) + st^2*(k3^2 + k2^2*(1 - 6*st^2)) + 6*ct^2*(2*k3^2 + k2^2*(2 + st^2)))) + b01*(-24*(-1 + C)*ct^6*f*k1*k2^3*Mk2 + 2*ct^5*f*k2^2*(-6*(-5 + 4*C)*k1^2 + 6*k2^2 + 5*f*k3^2)*Mk2 + 7*b1^2*k3^2*(2*ct^2*k1*k2*(Mk1 + 2*Mk2) + 2*ct*(k2^2*(2*Mk1 + Mk2) + k1^2*(Mk1 + 2*Mk2)) + k1*k2*(-(Mk1*(-4 + st^2)) - 2*Mk2*(-1 + st^2))) + k1*k2*(k3^2*(14*b2*Mk1 - 28*g2*Mk1 + 3*f^2*Mk1*st^2 - 7*b2*Mk2*st^2 + 14*g2*Mk2*st^2) + 2*C*f*(k2^2*st^2*(Mk1 - 6*Mk2*st^2) + k1^2*(12*Mk1 + Mk2*st^2))) + ct*f*(k1^4*(12*Mk1 + Mk2*st^2) + k2^2*st^2*((1 + 6*f)*k3^2*Mk1 + k2^2*(Mk1 - 6*Mk2*st^2)) + k1^2*(k3^2*(10*f*Mk1 + Mk2*st^2 + 6*f*Mk2*st^2) + k2^2*(Mk2*st^2*(1 + 12*C - 6*st^2) + Mk1*(12 + 48*C + st^2)))) + 2*ct^3*f*(6*k1^4*Mk2 + 3*k2^4*(2*Mk1 + Mk2*st^2) + k2^2*k3^2*(6*Mk1 + 10*f*Mk1 + 5*f*Mk2*st^2) + k1^2*(2*(3 + 5*f)*k3^2*Mk2 + k2^2*(-6*(-5 + 4*C)*Mk1 + 3*Mk2*(2 + 8*C + 3*st^2 - 2*C*st^2)))) + 2*ct^4*k1*k2*(15*f^2*k3^2*Mk2 + 14*g2*k3^2*Mk2 - 6*f*(2*(-2 + C)*k1^2*Mk2 + k2^2*(2*(-1 + C)*Mk1 + Mk2*(-2 - st^2 + C*(-2 + st^2))))) + 2*ct^2*k1*k2*(3*f^2*k3^2*(5*Mk1 + 3*Mk2*st^2) + 7*k3^2*(2*g2*Mk1 + b2*Mk2 - g2*Mk2*(2 + st^2)) + f*(k1^2*(-12*(-2 + C)*Mk1 + 4*Mk2*st^2 - C*Mk2*(-12 + st^2)) + k2^2*(Mk1*(12 + st^2 - C*(-12 + st^2)) + 3*Mk2*st^2*(1 - 2*st^2 + 2*C*(1 + st^2))))) + b1*(2*ct^4*k1*k2*((7 + 12*f - 7*K)*k3^2*Mk2 - 14*(-1 + C)*k2^2*(Mk1 + Mk2)) + 2*ct^3*(k2^2*(7*k2^2 + (7 + 12*f)*k3^2)*(Mk1 + Mk2) + k1^2*(2*(7 + 6*f)*k3^2*Mk2 - 7*(-5 + 4*C)*k2^2*(Mk1 + Mk2))) + k1*k2*(14*C*(Mk1 + Mk2)*(2*k1^2 - k2^2*st^2) + k3^2*(14*(1 + K)*Mk1 + 4*f*Mk1*(6 + st^2) - Mk2*st^2*(7 - 4*f + 7*K + 12*f*st^2))) + ct^2*k1*k2*(-28*(-2 + C)*k1^2*(Mk1 + Mk2) + 14*k2^2*(Mk1 + Mk2)*(2 - st^2 + C*(2 + st^2)) + k3^2*(2*(7 + 24*f - 7*K)*Mk1 + Mk2*(14 - 7*st^2 + 7*K*(2 + st^2) + 12*f*(4 + st^2)))) + ct*(14*k1^4*(Mk1 + Mk2) - 7*k2^4*(Mk1 + Mk2)*st^2 + k2^2*k3^2*((-7 + 6*f)*Mk2*st^2 - 7*Mk1*(-4 + st^2) + 6*f*Mk1*(4 + st^2)) + k1^2*(7*k2^2*(Mk1 + Mk2)*(2 + 8*C - st^2) + 2*k3^2*((7 + 12*f)*Mk1 + Mk2*(7 - 7*st^2 + 3*f*(4 + st^2)))))))))\/(21*k1*k2*k3^2*Mk1*Mk2)"