"(((-2*I)\/495)*D1^4*Sqrt[Pi\/7]*Pk1*Pk3*(11*b1*f*(9*beta19*k1*((-1 + 2*C)*k1^3 + (-3 + 4*C)*ct*k1^2*k2 + 2*(-1 + C)*ct^2*k1*k2^2 + (1 - 2*C)*k1*k3^2 + ct*k2*k3^2)*(4*ct^2*k1*k2 + 2*ct^3*k2^2 - 2*k1*k2*st^2 + ct*(2*k1^2 + 2*k3^2 - 3*k2^2*st^2)) + k2*(18*ct^2*gr1*k1^5 - 36*C*ct^2*gr1*k1^5 - 18*beta15*ct*k1^4*k2 + 60*beta17*ct*k1^4*k2 - 20*beta18*ct*k1^4*k2 + 72*ct^3*gr1*k1^4*k2 - 108*C*ct^3*gr1*k1^4*k2 + 18*ct*gr1*K*k1^4*k2 - 54*beta15*ct^2*k1^3*k2^2 + 180*beta17*ct^2*k1^3*k2^2 - 60*beta18*ct^2*k1^3*k2^2 - 18*ct^2*gr1*k1^3*k2^2 + 90*ct^4*gr1*k1^3*k2^2 - 108*C*ct^4*gr1*k1^3*k2^2 - 40*ct^2*f*gr1*k1^3*k2^2 + 54*ct^2*gr1*K*k1^3*k2^2 - 54*beta15*ct^3*k1^2*k2^3 + 200*beta17*ct^3*k1^2*k2^3 - 60*beta18*ct^3*k1^2*k2^3 - 36*ct^3*gr1*k1^2*k2^3 + 36*ct^5*gr1*k1^2*k2^3 - 36*C*ct^5*gr1*k1^2*k2^3 - 80*ct^3*f*gr1*k1^2*k2^3 + 54*ct^3*gr1*K*k1^2*k2^3 - 18*beta15*ct^4*k1*k2^4 + 100*beta17*ct^4*k1*k2^4 - 20*beta18*ct^4*k1*k2^4 - 18*ct^4*gr1*k1*k2^4 - 40*ct^4*f*gr1*k1*k2^4 + 18*ct^4*gr1*K*k1*k2^4 + 20*beta17*ct^5*k2^5 - 36*ct^2*gr1*k1^3*k3^2 + 72*C*ct^2*gr1*k1^3*k3^2 - 18*beta15*ct*k1^2*k2*k3^2 + 60*beta17*ct*k1^2*k2*k3^2 - 20*beta18*ct*k1^2*k2*k3^2 - 90*ct^3*gr1*k1^2*k2*k3^2 + 108*C*ct^3*gr1*k1^2*k2*k3^2 - 18*ct*gr1*K*k1^2*k2*k3^2 - 18*beta15*ct^2*k1*k2^2*k3^2 + 60*beta17*ct^2*k1*k2^2*k3^2 - 20*beta18*ct^2*k1*k2^2*k3^2 + 18*ct^2*gr1*k1*k2^2*k3^2 - 54*ct^4*gr1*k1*k2^2*k3^2 + 36*C*ct^4*gr1*k1*k2^2*k3^2 + 40*ct^2*f*gr1*k1*k2^2*k3^2 - 18*ct^2*gr1*K*k1*k2^2*k3^2 + 20*beta17*ct^3*k2^3*k3^2 + 18*ct^3*gr1*k2^3*k3^2 + 40*ct^3*f*gr1*k2^3*k3^2 + 18*ct^2*gr1*k1*k3^4 - 36*C*ct^2*gr1*k1*k3^4 + 18*ct^3*gr1*k2*k3^4 - 9*gr1*k1^5*st^2 + 18*C*gr1*k1^5*st^2 - 54*ct*gr1*k1^4*k2*st^2 + 90*C*ct*gr1*k1^4*k2*st^2 + 18*beta15*k1^3*k2^2*st^2 - 9*beta17*k1^3*k2^2*st^2 + 3*beta18*k1^3*k2^2*st^2 - 99*ct^2*gr1*k1^3*k2^2*st^2 + 126*C*ct^2*gr1*k1^3*k2^2*st^2 + 2*f*gr1*k1^3*k2^2*st^2 - 9*gr1*K*k1^3*k2^2*st^2 + 45*beta15*ct*k1^2*k2^3*st^2 - 30*beta17*ct*k1^2*k2^3*st^2 + 9*beta18*ct*k1^2*k2^3*st^2 + 9*ct*gr1*k1^2*k2^3*st^2 - 54*ct^3*gr1*k1^2*k2^3*st^2 + 54*C*ct^3*gr1*k1^2*k2^3*st^2 + 12*ct*f*gr1*k1^2*k2^3*st^2 - 18*ct*gr1*K*k1^2*k2^3*st^2 + 27*beta15*ct^2*k1*k2^4*st^2 - 30*beta17*ct^2*k1*k2^4*st^2 + 6*beta18*ct^2*k1*k2^4*st^2 + 9*ct^2*gr1*k1*k2^4*st^2 + 12*ct^2*f*gr1*k1*k2^4*st^2 - 9*ct^2*gr1*K*k1*k2^4*st^2 - 10*beta17*ct^3*k2^5*st^2 + 18*gr1*k1^3*k3^2*st^2 - 36*C*gr1*k1^3*k3^2*st^2 + 63*ct*gr1*k1^2*k2*k3^2*st^2 - 90*C*ct*gr1*k1^2*k2*k3^2*st^2 - 3*beta17*k1*k2^2*k3^2*st^2 + beta18*k1*k2^2*k3^2*st^2 + 45*ct^2*gr1*k1*k2^2*k3^2*st^2 - 18*C*ct^2*gr1*k1*k2^2*k3^2*st^2 - 2*f*gr1*k1*k2^2*k3^2*st^2 + 9*gr1*K*k1*k2^2*k3^2*st^2 - 3*beta17*ct*k2^3*k3^2*st^2 - 9*ct*gr1*k2^3*k3^2*st^2 - 6*ct*f*gr1*k2^3*k3^2*st^2 - 9*gr1*k1*k3^4*st^2 + 18*C*gr1*k1*k3^4*st^2 - 9*ct*gr1*k2*k3^4*st^2 - 30*beta17*k1*k2^4*st^4 + 6*beta18*k1*k2^4*st^4 + 12*f*gr1*k1*k2^4*st^4 - 30*beta17*ct*k2^5*st^4 + 9*beta16*k1*(2*k1^4 + 6*ct*k1^3*k2 + 3*k1^2*k2^2*(2*ct^2 - st^2) + ct*k1*k2*(2*ct^2*k2^2 - 2*k3^2 - 3*k2^2*st^2) + k3^2*(-2*ct^2*k2^2 - 2*k3^2 + k2^2*st^2)) - 9*beta14*(2*k1^5 + 4*ct*k1^4*k2 - 6*ct*k1^2*k2*k3^2 + k1^3*k2^2*(2*ct^2 - st^2) + k1*k3^2*(-6*ct^2*k2^2 - 2*k3^2 + 3*k2^2*st^2) + ct*k2*k3^2*(-2*ct^2*k2^2 - 2*k3^2 + 3*k2^2*st^2)))) + 99*b1^2*k2^2*(2*ct^3*k2^2*(f*gr1*k1^2 + beta17*k3^2) + 2*ct^2*k1*k2*((3*beta17 - beta18)*k3^2 + 2*f*gr1*(k1^2 - k3^2)) + k1*k2*((-3*beta17 + beta18)*k3^2 + 2*f*gr1*(-k1^2 + k3^2))*st^2 + ct*(k3^2*(6*beta17*k1^2 - 2*beta18*k1^2 - 3*beta17*k2^2*st^2) + f*gr1*(2*k1^4 + 2*k3^4 - k1^2*(4*k3^2 + 3*k2^2*st^2)))) + f*(11*beta19*f*k1*((-1 + 2*C)*k1^3 + (-3 + 4*C)*ct*k1^2*k2 + 2*(-1 + C)*ct^2*k1*k2^2 + (1 - 2*C)*k1*k3^2 + ct*k2*k3^2)*(20*ct*k1^2 + 40*ct^2*k1*k2 + 20*ct^3*k2^2 - 2*k1*k2*st^2 - 3*ct*k2^2*st^2) + k2*(11*beta16*f*k1*(20*k1^4 + 60*ct*k1^3*k2 + k2^2*k3^2*(-20*ct^2 + st^2) + ct*k1*k2*(20*ct^2*k2^2 - 40*k3^2 - 3*k2^2*st^2) + k1^2*(60*ct^2*k2^2 - 20*k3^2 - 3*k2^2*st^2)) - 11*beta14*f*(20*k1^5 + 40*ct*k1^4*k2 - 60*ct*k1^2*k2*k3^2 + 3*k1*k2^2*k3^2*(-20*ct^2 + st^2) + ct*k2^3*k3^2*(-20*ct^2 + 3*st^2) + k1^3*(20*ct^2*k2^2 - 20*k3^2 - k2^2*st^2)) + k2*(-210*beta18*ct*f*k1^4 - 220*ct^3*f*gr1*k1^4 + 440*C*ct^3*f*gr1*k1^4 - 396*ct*g2*gr1*k1^4 - 630*beta18*ct^2*f*k1^3*k2 - 880*ct^4*f*gr1*k1^3*k2 + 1320*C*ct^4*f*gr1*k1^3*k2 - 1188*ct^2*g2*gr1*k1^3*k2 - 630*beta18*ct^3*f*k1^2*k2^2 - 1100*ct^5*f*gr1*k1^2*k2^2 + 1320*C*ct^5*f*gr1*k1^2*k2^2 + 210*ct^3*f^2*gr1*k1^2*k2^2 - 1188*ct^3*g2*gr1*k1^2*k2^2 - 210*beta18*ct^4*f*k1*k2^3 - 440*ct^6*f*gr1*k1*k2^3 + 440*C*ct^6*f*gr1*k1*k2^3 + 420*ct^4*f^2*gr1*k1*k2^3 - 396*ct^4*g2*gr1*k1*k2^3 + 210*ct^5*f^2*gr1*k2^4 - 198*b2*ct*gr1*k1^2*k3^2 + 220*ct^3*f*gr1*k1^2*k3^2 - 440*C*ct^3*f*gr1*k1^2*k3^2 + 396*ct*g2*gr1*k1^2*k3^2 - 198*b2*ct^2*gr1*k1*k2*k3^2 + 440*ct^4*f*gr1*k1*k2*k3^2 - 440*C*ct^4*f*gr1*k1*k2*k3^2 + 396*ct^2*g2*gr1*k1*k2*k3^2 + 220*ct^5*f*gr1*k2^2*k3^2 + 33*ct*f*gr1*k1^4*st^2 - 66*C*ct*f*gr1*k1^4*st^2 - 15*beta18*f*k1^3*k2*st^2 + 165*ct^2*f*gr1*k1^3*k2*st^2 - 264*C*ct^2*f*gr1*k1^3*k2*st^2 + 198*g2*gr1*k1^3*k2*st^2 - 45*beta18*ct*f*k1^2*k2^2*st^2 + 264*ct^3*f*gr1*k1^2*k2^2*st^2 - 330*C*ct^3*f*gr1*k1^2*k2^2*st^2 + 15*ct*f^2*gr1*k1^2*k2^2*st^2 + 396*ct*g2*gr1*k1^2*k2^2*st^2 - 30*beta18*ct^2*f*k1*k2^3*st^2 + 132*ct^4*f*gr1*k1*k2^3*st^2 - 132*C*ct^4*f*gr1*k1*k2^3*st^2 + 60*ct^2*f^2*gr1*k1*k2^3*st^2 + 198*ct^2*g2*gr1*k1*k2^3*st^2 + 50*ct^3*f^2*gr1*k2^4*st^2 - 33*ct*f*gr1*k1^2*k3^2*st^2 + 66*C*ct*f*gr1*k1^2*k3^2*st^2 + 99*b2*gr1*k1*k2*k3^2*st^2 - 99*ct^2*f*gr1*k1*k2*k3^2*st^2 + 132*C*ct^2*f*gr1*k1*k2*k3^2*st^2 - 198*g2*gr1*k1*k2*k3^2*st^2 - 66*ct^3*f*gr1*k2^2*k3^2*st^2 + 66*f*gr1*k1^3*k2*st^4 - 132*C*f*gr1*k1^3*k2*st^4 + 198*ct*f*gr1*k1^2*k2^2*st^4 - 264*C*ct*f*gr1*k1^2*k2^2*st^4 + 12*beta18*f*k1*k2^3*st^4 + 132*ct^2*f*gr1*k1*k2^3*st^4 - 132*C*ct^2*f*gr1*k1*k2^3*st^4 - 24*f^2*gr1*k1*k2^3*st^4 - 60*ct*f^2*gr1*k2^4*st^4 - 66*f*gr1*k1*k2*k3^2*st^4 + 132*C*f*gr1*k1*k2*k3^2*st^4 - 66*ct*f*gr1*k2^2*k3^2*st^4 - 11*beta15*f*k1*(k1 + ct*k2)*(20*ct*k1^2 + 40*ct^2*k1*k2 + 20*ct^3*k2^2 - 2*k1*k2*st^2 - 3*ct*k2^2*st^2) + 5*beta17*f*(210*ct^4*k1*k2^3 + 42*ct^5*k2^4 + 9*k1^3*k2*st^2 - 12*k1*k2^3*st^4 + 6*ct^2*(63*k1^3*k2 + 5*k1*k2^3*st^2) + 10*ct^3*(42*k1^2*k2^2 + k2^4*st^2) + 6*ct*(21*k1^4 + 5*k1^2*k2^2*st^2 - 2*k2^4*st^4)))))))\/(k1^2*k2*k3^4)"