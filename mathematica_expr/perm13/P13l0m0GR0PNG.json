"(2*D1^4*Sqrt[Pi]*Pk1*Pk3*(21*bE01*k1*(10*bE01*k3^4*(3*bE02 + alphak2*fNL*(3*b1 + f*(ct^2 + st^2))) + alphak3^2*(5*bE11*k3^2*(3*b1*k3^2 + f*(k1^2 + 2*ct*k1*k2 + k2^2*(ct^2 + st^2))) + bE01*(15*b1*k1*(k1 + ct*k2)*k3^2 + 5*f*(k1^4 + 3*ct*k1^3*k2 + b1*k2^2*k3^2*(ct^2 + st^2) + k1^2*k2^2*(3*ct^2 + st^2) + ct*k1*k2*(ct^2*k2^2 + b1*k3^2 + k2^2*st^2)) + 3*f^2*k2*(3*ct^3*k1*k2^2 + ct^4*k2^3 + k2*st^2*(k1^2 + k2^2*st^2) + ct*(k1^3 + 3*k1*k2^2*st^2) + ct^2*(3*k1^2*k2 + 2*k2^3*st^2)))) + alphak3*k3^2*(15*bE01*bE11*k3^2 + 5*bE01^2*(3*k1^2 + ct*(3 + f)*k1*k2 + f*k2^2*(ct^2 + st^2)) + 2*(5*bE02*(3*b1*k3^2 + f*(k1^2 + 2*ct*k1*k2 + k2^2*(ct^2 + st^2))) + alphak2*fNL*(15*b1^2*k3^2 + 5*b1*f*(k1^2 + 2*ct*k1*k2 + (k2^2 + k3^2)*(ct^2 + st^2)) + f^2*(6*ct^3*k1*k2 + 3*ct^4*k2^2 + 6*ct*k1*k2*st^2 + 3*ct^2*(k1^2 + 2*k2^2*st^2) + st^2*(k1^2 + 3*k2^2*st^2)))))) + alphak1^2*(21*bE01*(f*(5*bE01*k1 + 5*bE11*k1 + bE01*ct*(5 - 3*f)*k2) + 5*b1*(3*bE01*k1 + 3*bE11*k1 - bE01*ct*(-3 + f)*k2))*k3^4 + alphak3^2*(105*b1^3*k3^2*(-3*K*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2) + k2*(ct^2*(3 + f)*k1*k2 + ct*(3 + f)*(k1^2 - k3^2) + f*k1*k2*st^2)) + 21*b1^2*(15*k1*k3^2*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)) - 5*f*(-(ct^4*k1*k2^2*(k2^2 - 2*(-1 + C)*k3^2)) + ct^3*k2*(k3^2*(k2^2 + k3^2) + k1^2*(-3*k2^2 + (-3 + 4*C)*k3^2)) + (-1 + 2*C)*k1*k3^2*(k1^2 - k3^2)*st^2 + K*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 + k3^2 + k2^2*st^2) + ct*k2*(-k1^4 + k2^2*k3^2*st^2 - k1^2*(k2^2 + (3 - 4*C)*k3^2)*st^2 + k3^4*(1 + st^2)) + ct^2*k1*((1 - 2*C)*k3^4 - k1^2*(3*k2^2 + (1 - 2*C)*k3^2) - k2^4*st^2 + k2^2*k3^2*(1 + 2*(-1 + C)*st^2))) + f^2*k2*(3*ct^4*k1*k2^3 + 3*ct^3*k2^2*(3*k1^2 - 2*k3^2) + 3*ct^2*k1*k2*(3*k1^2 - 2*k3^2 + 2*k2^2*st^2) + k1*k2*st^2*(3*k1^2 - 2*k3^2 + 3*k2^2*st^2) + 3*ct*(k1^4 + 3*k1^2*k2^2*st^2 - k3^2*(k3^2 + 2*k2^2*st^2)))) - 3*b1*f*(42*(-1 + C)*ct^6*f*k1*k2^4 + 3*ct^5*f*k2^3*(7*(-7 + 8*C)*k1^2 + 5*f*k2^2 + 7*k3^2) + ct^4*k1*k2^2*(30*f^2*k2^2 - 70*g2*k2^2 + 21*f*(3*(-3 + 4*C)*k1^2 + k3^2 + k2^2*(-1 + K + 4*(-1 + C)*st^2))) + ct^3*k2*(-280*g2*k1^2*k2^2 + 30*f^2*k2^2*(k3^2 + k2^2*st^2) + 21*f*((-5 + 8*C)*k1^4 + k3^4 + k2^2*k3^2*(1 + 2*st^2) + k1^2*k2^2*(-3 + 4*K + 2*(-5 + 6*C)*st^2))) + ct^2*k1*(3*f^2*k2^2*(-10*k1^2 + 15*k3^2 + 12*k2^2*st^2) + 7*f*((-3 + 6*C)*k1^4 + 3*(1 - 2*C)*k3^4 + k2^2*k3^2*(6 - 3*K - 10*(-1 + C)*st^2) + k2^4*st^2*(-1 + K + 6*(-1 + C)*st^2) + k1^2*k2^2*(-9 + 18*K + (-26 + 38*C)*st^2)) - 35*k2^2*(b2*k3^2 + 2*g2*(6*k1^2 + k2^2*st^2))) - k1*(35*b2*k3^2*(k1^2 + k3^2 + k2^2*st^2) + 70*g2*(k1^2 - k3^2)*(k1^2 + k3^2 + k2^2*st^2) - 3*f^2*k2^2*st^2*(-2*k1^2 + 3*k3^2 + 2*k2^2*st^2) - 7*f*(k1^2 - k3^2)*(K*(3*k1^2 + k2^2*st^2) + (-1 + 2*C)*st^2*(k1^2 + k3^2 + 3*k2^2*st^2))) + ct*k2*(-70*k1^2*(4*g2*k1^2 + b2*k3^2 + 2*g2*k2^2*st^2) - 3*f^2*(5*k1^4 - 5*k1^2*k3^2 - 6*k2^2*k3^2*st^2 - 5*k2^4*st^4) + 7*f*(k1^4*(-3 + 12*K + (-9 + 16*C)*st^2) + k3^2*st^2*(k3^2 + k2^2*(1 + 3*st^2)) + k1^2*(k3^2*(3 - 6*K + (4 - 8*C)*st^2) + k2^2*st^2*(-1 + 2*K + 3*(-3 + 4*C)*st^2))))) - f^2*(90*(-1 + C)*ct^6*f*k1*k2^4 + 5*ct^5*f*k2^3*(9*(-7 + 8*C)*k1^2 + 7*f*k2^2 + 9*k3^2) + 3*ct^4*k1*k2^2*(35*f^2*k2^2 - 42*g2*k2^2 + 3*f*(15*(-3 + 4*C)*k1^2 - 5*(-3 + 2*C)*k3^2 + 12*(-1 + C)*k2^2*st^2)) + 3*ct*k2*(-42*b2*k1^2*k3^2 - 28*g2*k1^2*(6*k1^2 - 3*k3^2 + k2^2*st^2) + f*st^2*(3*(-9 + 16*C)*k1^4 + k2^2*(5*f*k2^2 + 3*k3^2)*st^2 + 3*k1^2*(5*f*k2^2 + (7 - 12*C)*k3^2 + (-3 + 4*C)*k2^2*st^2))) + ct^3*k2*(-504*g2*k1^2*k2^2 + 5*f^2*(21*k1^2*k2^2 + 10*k2^4*st^2) + 9*f*(5*(-5 + 8*C)*k1^4 + 6*k2^2*k3^2*st^2 + k1^2*(-5*(-3 + 4*C)*k3^2 + 6*(-5 + 6*C)*k2^2*st^2))) + ct^2*k1*(5*f^2*(7*k1^2*k2^2 + 18*k2^4*st^2) - 21*k2^2*(3*b2*k3^2 + 2*g2*(18*k1^2 - 3*k3^2 + k2^2*st^2)) + 9*f*(5*(-1 + 2*C)*k1^4 + 2*(-1 + C)*k2^2*st^2*(-6*k3^2 + k2^2*st^2) + k1^2*((5 - 10*C)*k3^2 + 2*(-13 + 19*C)*k2^2*st^2))) + k1*(-21*b2*k3^2*(3*k1^2 + k2^2*st^2) - 42*g2*(k1^2 - k3^2)*(3*k1^2 + k2^2*st^2) + f*st^2*(9*(-1 + 2*C)*k1^4 + 9*k2^2*(f*k2^2 + (1 - 2*C)*k3^2)*st^2 + k1^2*(5*f*k2^2 - 9*(-1 + 2*C)*(k3^2 - k2^2*st^2)))))) + 3*alphak3*k3^2*(-35*b1^2*(-3*bE11*k1*k3^2 + bE01*(-(ct*(3 + f)*k1^2*k2) - ct^2*(3 + f)*k1*k2^2 + 2*ct*f*k2*k3^2 + 3*K*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2) - k1*(3*k3^2 + f*k2^2*st^2))) + f*(7*bE11*f*k1*(3*k1^2 + 6*ct*k1*k2 + k2^2*(3*ct^2 + st^2)) + bE01*(35*k1*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)) - 3*f^2*k2*(5*ct*k1^2 + 15*ct^2*k1*k2 + 10*ct^3*k2^2 + 3*k1*k2*st^2 + 6*ct*k2^2*st^2) - 7*f*(-(ct*k2*(k2^2 - k3^2)*(3*ct^2 + st^2)) + k1^3*(-3 + (-3 + 6*C)*ct^2 + (-1 + 2*C)*st^2) + ct*k1^2*k2*(-9 + 3*(-3 + 4*C)*ct^2 + (-3 + 4*C)*st^2) + k1*(6*(-1 + C)*ct^4*k2^2 + (-k2^2 + (1 - 2*C)*k3^2)*st^2 + ct^2*(3*(1 - 2*C)*k3^2 + k2^2*(-9 + 2*(-1 + C)*st^2)))))) - 7*b1*(-5*bE11*f*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 + k3^2 + k2^2*st^2) + bE01*(-15*k1*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)) + 2*f^2*k2*(3*ct^2*k1*k2 + 3*ct^3*k2^2 + k1*k2*st^2 + 3*ct*(k3^2 + k2^2*st^2)) + 5*f*(-(ct*k2*(k2^2 - k3^2)*(ct^2 + st^2)) + k1^3*(-1 + (-1 + 2*C)*ct^2 + K - st^2 + 2*C*st^2) + ct*k1^2*k2*(-4 + (-3 + 4*C)*ct^2 + 2*K - 3*st^2 + 4*C*st^2) + k1*(2*(-1 + C)*ct^4*k2^2 - k2^2*st^2 - k3^2*(1 + K + (-1 + 2*C)*st^2) + ct^2*((1 - 2*C)*k3^2 + k2^2*(-4 + K + 2*(-1 + C)*st^2)))))))) + 3*alphak1*(7*bE01*k3^4*(15*bE01*bE11*k1 + 5*bE01^2*(3*k1 - ct*(-3 + f)*k2) + 2*k1*(15*alphak2*b1^2*fNL + 5*b1*(3*bE02 + alphak2*f*fNL*(1 + ct^2 + st^2)) + f*(5*bE02 + alphak2*f*fNL*(3*ct^2 + st^2)))) + alphak3*k3^2*(210*alphak2*b1^3*fNL*k1*k3^2 + 35*bE01*bE11*f*k1*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 + k3^2 + k2^2*st^2) + 70*b1^2*k1*(3*bE02*k3^2 + alphak2*f*fNL*(k1^2 + 2*ct*k1*k2 + k3^2 + ct^2*(k2^2 + k3^2) + k2^2*st^2 + k3^2*st^2)) + 2*f^2*k1*(7*bE02*(3*k1^2 + 6*ct*k1*k2 + k2^2*(3*ct^2 + st^2)) + 3*alphak2*f*fNL*(10*ct^3*k1*k2 + 5*ct^4*k2^2 + 6*ct*k1*k2*st^2 + st^2*(k1^2 + k2^2*st^2) + ct^2*(5*k1^2 + 6*k2^2*st^2))) + 7*b1*(30*bE01*bE11*k1*k3^2 - 5*bE01^2*(3*(-1 + K)*k1^3 - 2*ct*(3 + f - 3*K)*k1^2*k2 + 2*ct*f*k2*k3^2 - k1*(ct^2*(3 + 2*f - 3*K)*k2^2 + 3*(1 + K)*k3^2 + 2*f*k2^2*st^2)) + 2*f*k1*(5*bE02*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 + k3^2 + k2^2*st^2) + alphak2*f*fNL*(3*ct^4*k2^2 + 6*ct*k1*k2*(1 + ct^2 + st^2) + k1^2*(3 + 3*ct^2 + st^2) + 3*ct^2*(k2^2 + k3^2 + 2*k2^2*st^2) + st^2*(k2^2 + k3^2 + 3*k2^2*st^2)))) - 7*bE01^2*(-15*k1*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)) + 2*f^2*k2^2*(3*ct^2*k1 + 3*ct^3*k2 + k1*st^2 + 3*ct*k2*st^2) + 5*f*(-(ct*k2*(k2^2 - k3^2)*(ct^2 + st^2)) + k1^3*(-2 + (-1 + 2*C)*ct^2 + (-1 + 2*C)*st^2) + ct*k1^2*k2*(-4 + (-3 + 4*C)*ct^2 + (-3 + 4*C)*st^2) + k1*(2*(-1 + C)*ct^4*k2^2 + (-k2^2 + (1 - 2*C)*k3^2)*st^2 + ct^2*((1 - 2*C)*k3^2 + k2^2*(-3 + 2*(-1 + C)*st^2)))))) + alphak3^2*(35*b1^2*k3^2*(3*bE11*k1*k3^2 + bE01*(-3*(-1 + K)*k1^3 + 2*ct*(3 + f - 3*K)*k1^2*k2 - ct*(3 + f)*k2*k3^2 + k1*(ct^2*(3 + 2*f - 3*K)*k2^2 + 3*K*k3^2 + 2*f*k2^2*st^2))) + 7*b1*(5*bE11*f*k1*k3^2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 + k3^2 + k2^2*st^2) + bE01*(15*k1*k3^2*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2)) + 2*f^2*k2*(3*ct^4*k1*k2^3 + 3*ct^3*k2^2*(3*k1^2 - k3^2) + 3*ct^2*k1*k2*(3*k1^2 - k3^2 + 2*k2^2*st^2) + k1*k2*st^2*(3*k1^2 - k3^2 + 3*k2^2*st^2) + 3*ct*(k1^4 + 3*k1^2*k2^2*st^2 - k2^2*k3^2*st^2)) - 5*f*((-1 + K)*k1^5 + 4*ct*(-1 + K)*k1^4*k2 + ct*k2*k3^2*(k2^2 + k3^2)*(ct^2 + st^2) + k1^3*(ct^2*(6*(-1 + K)*k2^2 + (-1 + 2*C)*k3^2) + (-1 + K)*k2^2*st^2 - k3^2*(1 + K + st^2 - 2*C*st^2)) + ct*k1^2*k2*(ct^2*(4*(-1 + K)*k2^2 + (-3 + 4*C)*k3^2) + (-2*k2^2 + (-3 + 4*C)*k3^2)*st^2 - 2*K*(k3^2 - k2^2*st^2)) + k1*(ct^4*k2^2*((-1 + K)*k2^2 + 2*(-1 + C)*k3^2) + k3^2*(-(K*k2^2) + (1 - 2*C)*k3^2)*st^2 + ct^2*((1 - 2*C)*k3^4 + (-1 + K)*k2^4*st^2 - k2^2*k3^2*(-2 + K - 2*(-1 + C)*st^2)))))) + f*(7*bE11*f*k1*k3^2*(3*k1^2 + 6*ct*k1*k2 + k2^2*(3*ct^2 + st^2)) + bE01*(35*k1*(b2*k3^2 + 2*g2*(k1^2 + 2*ct*k1*k2 + ct^2*k2^2 - k3^2))*(k1^2 + 2*ct*k1*k2 + k2^2*(ct^2 + st^2)) - 3*f^2*k2*(10*ct^4*k1*k2^3 + 5*ct^5*k2^4 - 2*k1^3*k2*st^2 + 10*ct^3*k2^4*st^2 + 2*k1*k2^3*st^4 - 2*ct^2*(5*k1^3*k2 - 6*k1*k2^3*st^2) - 5*ct*(k1^4 - k2^4*st^4)) - 7*f*(3*ct*k2^3*k3^2*(ct^2 + st^2)^2 + k1^5*(-3 + (-3 + 6*C)*ct^2 + (-1 + 2*C)*st^2) + ct*k1^4*k2*(-9 + 3*(-5 + 8*C)*ct^2 + (-9 + 16*C)*st^2) + 3*k1*k2^2*(ct^2 + st^2)*(2*(-1 + C)*ct^4*k2^2 + (1 - 2*C)*k3^2*st^2 + ct^2*((3 - 2*C)*k3^2 + 2*(-1 + C)*k2^2*st^2)) + ct*k1^2*k2*(3*(-7 + 8*C)*ct^4*k2^2 + st^2*((7 - 12*C)*k3^2 + k2^2*(-1 + 3*(-3 + 4*C)*st^2)) + 3*ct^2*((3 - 4*C)*k3^2 + k2^2*(-1 + 2*(-5 + 6*C)*st^2))) + k1^3*(9*(-3 + 4*C)*ct^4*k2^2 + st^2*((1 - 2*C)*k3^2 + k2^2*(-1 + (-3 + 6*C)*st^2)) + ct^2*(3*(1 - 2*C)*k3^2 + k2^2*(-9 + (-26 + 38*C)*st^2))))))))))\/(315*alphak1^2*alphak3^2*k1*k3^4)"