"(((2*I)\/495)*D1^4*Sqrt[Pi\/7]*Pk1*Pk2*(99*b1^2*k3^2*(2*ct^3*f*gr1*k1^2*k2 + 2*ct^2*k1*(beta18*k2^2 + f*gr1*(k1^2 + 2*k2^2)) + beta17*(2*k1^3 + ct*k2^3*(2*ct^2 - 3*st^2)) + ct*k2*(2*beta18*k1^2 + f*gr1*(2*k2^2 + k1^2*(4 - 3*st^2))) - k1*(beta18*k2^2*st^2 + f*gr1*(k1^2*st^2 + 2*k2^2*(-1 + st^2)))) + f*(-440*(-1 + C)*ct^6*f*gr1*k1*k2^4 + 10*ct^5*f*k2^3*(44*beta19*(-1 + C)*k1^2 + 21*beta17*k3^2 + gr1*(-22*(-7 + 6*C)*k1^2 + 22*k2^2 + 21*f*k3^2)) - ct*k2*(-198*b2*gr1*k1^2*k3^2 + 396*g2*gr1*k1^2*k3^2 - 11*beta19*f*k1^4*st^2 + 33*f*gr1*k1^4*st^2 - 11*beta19*f*k1^2*k2^2*st^2 + 33*f*gr1*k1^2*k2^2*st^2 + 11*beta15*f*k1^2*k3^2*st^2 + 33*beta16*f*k1^2*k3^2*st^2 - 15*beta18*f*k1^2*k3^2*st^2 - 45*f^2*gr1*k1^2*k3^2*st^2 + 33*beta14*f*k2^2*k3^2*st^2 + 66*f*gr1*k1^2*k2^2*st^4 + 66*f*gr1*k2^4*st^4 + 60*beta17*f*k2^2*k3^2*st^4 + 60*f^2*gr1*k2^2*k3^2*st^4 - 22*C*f*k1^2*(20*gr1*k1^2 + 3*beta19*k2^2*st^2 - 9*gr1*k2^2*st^2)) + k1*st^2*(22*beta19*C*f*k1^2*k2^2 - 66*C*f*gr1*k2^2*(k1^2 + 2*k2^2*st^2) - k3^2*(11*beta14*f*k1^2 - 5*beta17*f*k1^2 - 5*f^2*gr1*k1^2 + 11*beta16*f*k2^2 + 99*b2*gr1*k2^2 - 198*g2*gr1*k2^2 + 12*beta18*f*k2^2*st^2 + 36*f^2*gr1*k2^2*st^2)) + 2*ct^4*k1*k2^2*(110*beta19*f*((-3 + 2*C)*k1^2 - k2^2) + 5*(22*beta15 + 21*beta18)*f*k3^2 + 315*f^2*gr1*k3^2 + 198*g2*gr1*k3^2 + 22*f*gr1*((45 - 30*C)*k1^2 + k2^2*(15 + 10*C - 3*st^2 + 3*C*st^2))) + 2*ct^3*k2*(198*g2*gr1*k1^2*k3^2 + 5*f^2*gr1*k3^2*(63*k1^2 + 5*k2^2*st^2) + 5*f*k3^2*(22*beta15*k1^2 + 22*beta16*k1^2 + 21*beta18*k1^2 + 22*beta14*k2^2 + 5*beta17*k2^2*st^2) - 11*f*gr1*(10*(-5 + 2*C)*k1^4 + 3*k2^4*st^2 - 3*k1^2*k2^2*(10 + 20*C - 4*st^2 + 3*C*st^2)) - 11*beta19*f*k1^2*(10*k1^2 + k2^2*(10 + 20*C - 3*st^2 + 3*C*st^2))) + ct^2*k1*(30*f^2*gr1*k3^2*(7*k1^2 + 3*k2^2*st^2) + 198*gr1*k2^2*k3^2*(b2 - g2*(2 + st^2)) + f*(11*beta19*k2^2*((5*k1^2 + 3*k2^2)*st^2 - 2*C*k1^2*(20 + st^2)) + k3^2*(220*beta14*k1^2 + 210*beta17*k1^2 + k2^2*(220*beta16 - 33*beta15*st^2 + 30*beta18*st^2)) + 11*gr1*(20*k1^4 + 3*k2^4*st^2*(-3 - 4*st^2 + 4*C*(-1 + st^2)) + k1^2*k2^2*(20 - 15*st^2 + 6*C*(20 + st^2)))))) + 11*b1*f*(4*ct^5*k2^3*(9*beta19*(-1 + C)*k1^2 - 9*(-1 + C)*gr1*k1^2 + 5*beta17*k3^2) + 2*ct^4*k1*k2^2*(9*beta19*(-3 + 2*C)*k1^2 - 9*(-5 + 4*C)*gr1*k1^2 - 9*beta19*k2^2 - 9*(-3 + 2*C)*gr1*k2^2 + (9*beta15 + 10*beta18)*k3^2 + gr1*(9 + 20*f - 9*K)*k3^2) + k1*(18*beta19*C*k1^2*k2^2*(-2 + st^2) - k3^2*(-18*beta16*k2^2 + 2*f*gr1*k1^2*st^2 + 9*beta16*k2^2*st^2 + beta18*k2^2*st^2 + 9*gr1*k2^2*st^2 + 4*f*gr1*k2^2*st^2 + 9*gr1*K*k2^2*st^2 + 6*beta18*k2^2*st^4 + 12*f*gr1*k2^2*st^4 + beta17*k1^2*(-20 + st^2) + 9*beta14*k1^2*(-2 + st^2)) - 18*C*gr1*k2^2*(k2^2*st^2 + 2*k1^2*(-1 + st^2))) + 2*ct^3*k2*(k3^2*(9*beta15*k1^2 + 9*beta16*k1^2 + 10*beta18*k1^2 + 9*beta14*k2^2 + 10*beta17*k2^2 - 5*beta17*k2^2*st^2) - 9*beta19*(k1^4 + 3*k1^2*k2^2*(1 + (-1 + C)*st^2)) + gr1*(-18*(-2 + C)*k1^4 + 9*k2^4 + (9 + 20*f)*k2^2*k3^2 + k1^2*((18 + 40*f - 9*K)*k3^2 + 9*k2^2*(7 - 2*C - 3*st^2 + 3*C*st^2)))) + ct^2*k1*(k3^2*(18*beta14*k1^2 + 20*beta17*k1^2 + k2^2*(18*beta15 + 18*beta16 + 20*beta18 - 27*beta15*st^2 - 6*beta18*st^2)) + 9*beta19*k2^2*(k2^2*(-2 + 3*st^2) + k1^2*(-6 + (5 - 2*C)*st^2)) + gr1*(18*k1^4 + 9*k2^4*(4 - 5*st^2 + 2*C*(2 + st^2)) + k2^2*k3^2*(36 - 9*st^2 + f*(80 - 12*st^2) + 9*K*(2 + st^2)) + k1^2*(2*(9 + 20*f)*k3^2 + 9*k2^2*(10 - 7*st^2 + 4*C*(1 + st^2))))) - ct*k2*(k3^2*(-20*beta18*k1^2 - 18*beta14*k2^2 + 3*beta18*k1^2*st^2 + 27*beta14*k2^2*st^2 + 3*beta17*k2^2*st^2 + 30*beta17*k2^2*st^4 + 9*beta15*k1^2*(-2 + st^2) + 9*beta16*k1^2*(-2 + 3*st^2)) - 9*beta19*(k1^4*(-2 + st^2) + k1^2*k2^2*(-2 + st^2 + C*(-4 + 6*st^2))) + gr1*(3*k2^2*(3*k2^2 + (3 + 2*f)*k3^2)*st^2 - 18*k1^4*(1 + 2*C - st^2) + k1^2*(k3^2*(9*(-2 - 2*K + st^2) + 4*f*(-10 + 3*st^2)) + 9*k2^2*(-2 + 3*st^2 + C*(-8 + 6*st^2))))))))\/(k1^2*k2^2*k3^2)"