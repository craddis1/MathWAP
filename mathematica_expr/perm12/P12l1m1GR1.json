"((-1\/105*I)*D1^4*Sqrt[(2*Pi)\/3]*Pk1*Pk2*st*(21*b1^2*(-5*beta19*k1*k2^2*(2*C*k1*k2 - 2*(-1 + C)*ct^2*k1*k2 + ct*(k1^2 + k2^2)) + k3^2*(ct^2*k2*(gr1*(5 + 3*f - 5*K)*k1^2 + 3*beta17*k2^2) + ct*k1*((5 + 2*f)*gr1*k1^2 + (5*beta15 + 2*beta18)*k2^2 + (5 + 4*f)*gr1*k2^2) + k2*(5*beta16*k1^2 + beta18*k1^2 + 5*gr1*k1^2 + 2*f*gr1*k1^2 + 5*gr1*K*k1^2 + 5*beta14*k2^2 + f*gr1*k2^2 + 3*f*gr1*k1^2*st^2 + 3*beta17*k2^2*st^2))) + f*(-72*(-1 + C)*ct^5*f*gr1*k1*k2^4 + ct^4*f*k2^3*(54*beta19*(-1 + C)*k1^2 + 25*beta17*k3^2 + gr1*(-18*(-11 + 9*C)*k1^2 + 36*k2^2 + 25*f*k3^2)) + k2*(18*C*f*k1^2*(-(beta19*k2^2*st^2) + gr1*(k1^2 + 3*k2^2*st^2)) + k3^2*(21*b2*gr1*k1^2 - 42*g2*gr1*k1^2 + f*st^2*(9*beta16*k1^2 + 3*beta18*k1^2 + 9*f*gr1*k1^2 + 9*beta14*k2^2 + 5*beta17*k2^2*st^2 + 5*f*gr1*k2^2*st^2))) + 3*ct^2*k2*(14*g2*gr1*k1^2*k3^2 + 5*f^2*gr1*k3^2*(3*k1^2 + 2*k2^2*st^2) + f*k3^2*(6*beta15*k1^2 + 9*beta16*k1^2 + 5*beta18*k1^2 + 9*beta14*k2^2 + 10*beta17*k2^2*st^2) - 6*beta19*f*k1^2*(k1^2 + k2^2*(1 + 3*C + st^2 - C*st^2)) - 6*f*gr1*((-4 + C)*k1^4 - 2*k2^4*st^2 + k1^2*k2^2*(-3 - 5*st^2 + 3*C*(-3 + st^2)))) + ct^3*k1*k2^2*(9*beta19*f*((-7 + 4*C)*k1^2 - 3*k2^2) + (27*beta15 + 20*beta18)*f*k3^2 + 60*f^2*gr1*k3^2 + 84*g2*gr1*k3^2 - 9*f*gr1*(3*(-7 + 4*C)*k1^2 + k2^2*(-9 - 8*st^2 + 8*C*(-1 + st^2)))) + ct*k1*(42*(b2 - 2*g2)*gr1*k2^2*k3^2 + 2*f^2*gr1*k3^2*(5*k1^2 + 18*k2^2*st^2) + f*(-9*beta19*k2^2*(4*C*k1^2 + (k1^2 + k2^2)*st^2) + 9*gr1*(k1^4 + (3 + 8*C)*k2^4*st^2 + k1^2*k2^2*(1 + 12*C + 3*st^2)) + k3^2*(18*beta14*k1^2 + 10*beta17*k1^2 + 3*k2^2*(6*beta16 + (3*beta15 + 4*beta18)*st^2))))) + 3*b1*(3*ct^4*f*k2^3*(14*beta19*(-1 + C)*k1^2 - 14*(-1 + C)*gr1*k1^2 + 5*beta17*k3^2) + ct^3*f*k1*k2^2*(7*beta19*((-7 + 4*C)*k1^2 - 3*k2^2) + 3*(7*beta15 + 4*beta18)*k3^2 + gr1*((77 - 56*C)*k1^2 - 7*(-7 + 4*C)*k2^2 + 2*(7 + 12*f - 7*K)*k3^2)) + k2*(k3^2*(35*b2*gr1*k1^2 + 7*f*gr1*k1^2 + 6*f^2*gr1*k1^2 - 70*g2*gr1*k1^2 + 7*f*gr1*K*k1^2 + 7*beta14*f*k2^2 + 12*f^2*gr1*k1^2*st^2 + 21*beta14*f*k2^2*st^2 + 3*beta17*f*k2^2*st^2 + 6*f^2*gr1*k2^2*st^2 + 15*beta17*f*k2^2*st^4 + 3*beta18*f*k1^2*(1 + st^2) + 7*beta16*f*k1^2*(1 + 3*st^2)) + 14*C*f*k1^2*(-(beta19*k2^2*(1 + 3*st^2)) + gr1*(k1^2 + k2^2*(2 + 3*st^2)))) + ct*f*k1*(-7*beta19*k2^2*(k2^2*(1 + 3*st^2) + k1^2*(1 + 4*C + 3*st^2)) + k3^2*(14*beta14*k1^2 + 6*beta17*k1^2 + k2^2*(7*beta15 + 14*beta16 + 6*beta18 + 21*beta15*st^2 + 12*beta18*st^2)) + gr1*(7*k1^4 + 7*k2^4*(2 + 4*C + 3*st^2) + k2^2*k3^2*(7*(3 + 2*K) + 24*f*(1 + st^2)) + k1^2*((7 + 12*f)*k3^2 + 7*k2^2*(3 + 8*C + 3*st^2)))) + ct^2*k2*(70*g2*gr1*k1^2*k3^2 + 18*f^2*gr1*(2*k1^2 + k2^2)*k3^2 + f*k3^2*(14*beta15*k1^2 + 21*beta16*k1^2 + 9*beta18*k1^2 + 21*beta14*k2^2 + 9*beta17*k2^2 + 30*beta17*k2^2*st^2) - 14*beta19*f*k1^2*(k1^2 + k2^2*(2 + 2*C + 3*st^2 - 3*C*st^2)) - 7*f*gr1*(2*(-3 + C)*k1^4 - 2*k2^2*(k2^2 + k3^2) + k1^2*((-3 + K)*k3^2 + 2*k2^2*(-5 - C - 3*st^2 + 3*C*st^2)))))))\/(k1^2*k2^2*k3^2)"