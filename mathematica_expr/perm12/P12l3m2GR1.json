"((I\/33)*D1^4*Sqrt[(2*Pi)\/105]*Pk1*Pk2*st^2*(33*b1^2*(k2^2*(beta18*k1 + 3*beta17*ct*k2) + f*gr1*k1*(k1^2 + 3*ct*k1*k2 + 2*k2^2))*k3^2 + 11*b1*f*(-3*beta19*k1*k2*(k1 + 3*ct*k2)*(2*C*k1*k2 - 2*(-1 + C)*ct^2*k1*k2 + ct*(k1^2 + k2^2)) - 2*ct^3*k2^3*(9*(-1 + C)*gr1*k1^2 - 5*beta17*k3^2) - 3*ct^2*k1*k2^2*(-((3*beta15 + 2*beta18)*k3^2) + gr1*((-7 + 4*C)*k1^2 + (-5 + 2*C)*k2^2 + (-1 - 4*f + K)*k3^2)) + ct*k2*(3*gr1*(2*k1^4 + k2^4 + (1 + 2*f)*k2^2*k3^2 + k1^2*((3 + 6*C)*k2^2 + (1 + 4*f)*k3^2)) + k3^2*(3*beta15*k1^2 + 9*beta16*k1^2 + 3*beta18*k1^2 + 9*beta14*k2^2 + 3*beta17*k2^2 + 10*beta17*k2^2*st^2)) + k1*(6*C*gr1*k2^2*(2*k1^2 + k2^2) + k3^2*(3*beta14*k1^2 + beta17*k1^2 + 2*f*gr1*k1^2 + 3*beta16*k2^2 + beta18*k2^2 + 3*gr1*k2^2 + 4*f*gr1*k2^2 + 3*gr1*K*k2^2 + 2*beta18*k2^2*st^2 + 4*f*gr1*k2^2*st^2))) + f*(-132*(-1 + C)*ct^4*f*gr1*k1*k2^4 - 11*beta19*f*k1*k2*(k1 + 3*ct*k2)*(2*C*k1*k2 - 2*(-1 + C)*ct^2*k1*k2 + ct*(k1^2 + k2^2)) + 2*ct^3*f*k2^3*(25*beta17*k3^2 + gr1*(-33*(-4 + 3*C)*k1^2 + 33*k2^2 + 25*f*k3^2)) + k1*(22*C*f*gr1*k2^2*(3*k1^2 + 2*k2^2*st^2) + k3^2*(11*beta14*f*k1^2 + 5*beta17*f*k1^2 + 5*f^2*gr1*k1^2 + 11*beta16*f*k2^2 + 33*b2*gr1*k2^2 - 66*g2*gr1*k2^2 + 6*beta18*f*k2^2*st^2 + 18*f^2*gr1*k2^2*st^2)) + ct^2*k1*k2^2*(3*(11*beta15 + 10*beta18)*f*k3^2 + 90*f^2*gr1*k3^2 + 66*g2*gr1*k3^2 - 11*f*gr1*(3*(-5 + 2*C)*k1^2 + k2^2*(-9 - 4*st^2 + 4*C*(-3 + st^2)))) + ct*f*k2*(k3^2*(11*beta15*k1^2 + 33*beta16*k1^2 + 15*beta18*k1^2 + 33*beta14*k2^2 + 30*beta17*k2^2*st^2) + gr1*(33*k1^4 + 2*k2^2*(11*k2^2 + 15*f*k3^2)*st^2 + k1^2*(45*f*k3^2 + 11*k2^2*(3 + 18*C + 2*st^2)))))))\/(k1^2*k2^2*k3^2)"